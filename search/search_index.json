{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome MAL","text":"<p>Makers Art Lab</p> <p>\uac04\ub2e8\ud55c \ud504\ub85c\uc81d\ud2b8\ub97c \uad6c\ud604\ud558\ub294 \uacfc\uc815\uc5d0\uc11c \ud504\ub85c\uc138\uc2f1, \uc544\ub450\uc774\ub178 \ucf54\ub529\uc744 \ud559\uc2b5\ud55c\ub2e4.</p>"},{"location":"#projects-list","title":"Projects List","text":""},{"location":"#1","title":"\ubc14\ub298 1\uac1c \uc2dc\uacc4","text":"<ul> <li>\ubc14\ub298\uc774 \ud558\ub098 \uc788\ub294 \uc2dc\uacc4, \ub9c8\uc6b0\uc2a4\ub97c \ub530\ub77c \uc6c0\uc9c1\uc778\ub2e4.</li> <li>\ubb3c\ub9ac\uc801\uc778 \uc7a5\uce58\uc640 \uc5f0\ub3d9\ud574\uc11c \ud654\uba74\uc758 \uc6c0\uc9c1\uc784\uc774 \uc7a5\uce58\uc758 \uc6c0\uc9c1\uc784\uc73c\ub85c \ud45c\ud604\ub420 \uc218 \uc788\uac8c \ud55c\ub2e4.</li> <li>\ud504\ub85c\uc138\uc2f1\uc758 \uae30\ub2a5\uc744 \ud559\uc2b5\ud558\uae30 \uc704\ud55c \ud504\ub85c\uc81d\ud2b8</li> <li>\uc544\ub450\uc774\ub178\uc640 \uc5f0\ub3d9, \uc2dc\ub9ac\uc5bc \ud1b5\uc2e0, \ud074\ub77c\uc2a4 \uc0ac\uc6a9, \ubca1\ud130 \uc0ac\uc6a9 \ud559\uc2b5</li> </ul>"},{"location":"01_Processing_Basic/","title":"Processing Start","text":"<p>Processing\uc740 \ucef4\ud4e8\ud130\ub85c \uadf8\ub9bc\uc744 \uadf8\ub9ac\ub294 \ub3c4\uad6c\ub2e4.</p> <ul> <li>\uc0ac\uc6a9\uc790\uc640 \uc0c1\ud638\uc791\uc6a9\uc744 \ud1b5\ud574 \uadf8\ub9bc\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4.</li> <li>\ud558\ub4dc\uc6e8\uc5b4 \uc7a5\uce58\uc640 \uc5f0\ub3d9\ud558\uc5ec \uc7a5\uce58\uc758 \uc0c1\ud0dc\ub97c \ud45c\uc2dc\ud560 \uc218 \uc788\ub2e4.</li> <li>\uc774\ub7f0 \ud2b9\uc131\uc744 \uc0ac\uc6a9\ud574 \uace0\uc815\ub41c \uadf8\ub9bc\uc774 \uc544\ub2c8\ub77c \uc5ec\ub7ec\uac00\uc9c0 \ubcc0\ud654\ub97c \uc2e4\uc2dc\uac04\uc73c\ub85c \uadf8\ub9bc\uc5d0 \ubc18\uc601\ud560 \uc218 \uc788\ub2e4.</li> <li>\uc7a5\uce58\uc758 \uc0c1\ud0dc\ub97c \ud45c\ud604\ud558\uac70\ub098 \uc7a5\uce58\uc758 \uc6c0\uc9c1\uc784\uc744 \ubaa8\ub378\ub9c1\ud574\uc11c \ubcf4\uc5ec\uc8fc\ub294 \ud615\uc2dd\uc73c\ub85c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4.</li> <li>\uc5ec\uae30\uc11c\ub294 \uc7a5\uce58\uc640 \uc5f0\ub3d9\ud574\uc11c \uadf8\ub9bc\uc758 \ubcc0\ud654\ub97c \uc7a5\uce58\uc5d0 \uc804\ub2ec\ud558\ub294 \uac83\uc744 \ubaa9\ud45c\ub85c \ud55c\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/#_1","title":"\ub2e4\uc6b4\ub85c\ub4dc","text":"<p>\ud504\ub85c\uc138\uc2f1 \ud504\ub85c\uadf8\ub7a8 \ub2e4\uc6b4\ub85c\ub4dc \ud398\uc774\uc9c0\ub85c \uc774\ub3d9</p>"},{"location":"01_Processing_Basic/01_Basic_Form/","title":"1. \ud504\ub85c\uc138\uc2f1 \ucf54\ub529\uc758 \uae30\ubcf8 \ud615\uc2dd","text":"<p>\ud504\ub85c\uc138\uc2f1 \ucf54\ub529\uc758 \uae30\ubcf8 \ud615\uc2dd\uc744 \uc54c\uc544 \ubcf8\ub2e4.</p> proc-001.pde<pre><code>void setup() {\n    size(640, 480);\n}\n\nvoid draw() {\n    line(50, 100, 500, 200);\n    circle(200, 150, 120);\n}\n</code></pre> <ul> <li>\ucf54\ub529 \ud558\uace0 \uc67c\ucabd \uc0c1\ub2e8\uc5d0 \uc788\ub294 PLAY \ubc84\ud2bc\uc744 \ub204\ub974\uba74 \ub3d9\uc791\ud55c\ub2e4.</li> <li>\uba48\ucd9c \ub54c\ub294 STOP \ubc84\ud2bc \ub204\ub974\uae30!</li> </ul>"},{"location":"01_Processing_Basic/01_Basic_Form/#setup-draw","title":"\uc14b\uc5c5\uacfc \ub4dc\ub85c\uc6b0 (Setup &amp; Draw)","text":"<ul> <li>\ud504\ub85c\uc138\uc2f1\uc740 setup \ub0b4\uc6a9\uc744 1\ubc88 \uc2e4\ud589\ud558\uace0, draw\uc5d0 \uc788\ub294 \ub0b4\uc6a9\uc744 \uc21c\uc11c\ub300\ub85c \ubc18\ubcf5\ud55c\ub2e4.</li> <li>\ubb34\ud55c\uc815, \uacc4\uc18d, \uadf8\ub9cc\ud558\ub77c \ud560\ub54c\uae4c\uc9c0.</li> </ul>"},{"location":"01_Processing_Basic/01_Basic_Form/#setup","title":"setup()","text":"<ul> <li>\uadf8\ub9bc \uadf8\ub9ac\uae30\uc758 \uae30\ubcf8 \uad6c\uc131\uc744 \uc791\uc131\ud55c\ub2e4.</li> <li>size : \uadf8\ub9bc \uadf8\ub9b4 \ub3c4\ud654\uc9c0\uc758 (\uac00\ub85c, \uc138\ub85c) \ud06c\uae30\ub2e4. \ub2e8\uc704\ub294 pixel</li> <li>\uc67c\ucabd \uc0c1\ub2e8\uc774 x, y\uc758 \uc6d0\uc810 (0, 0)\uc774\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/01_Basic_Form/#draw","title":"draw()","text":"<ul> <li>\uc5ec\uae30 \uc788\ub294 \ub0b4\uc6a9\uc774 \uc21c\uc11c\ub300\ub85c \ud55c\uc904 \uc529 \uc2e4\ud589\ub41c\ub2e4.</li> <li>\ub05d\uae4c\uc9c0 \uc2e4\ud589\ud558\uba74 \ub2e4\uc2dc draw() \uc548\uc5d0 \uc788\ub294 \ub0b4\uc6a9\uc744 \ucc98\uc74c\ubd80\ud130 \uc2e4\ud589\ud55c\ub2e4.</li> <li>\ub05d\uc774 \uc548\ub09c\ub2e4.</li> <li>\uc2a4\ud1b1 \ubc84\ud2bc\uc744 \ub204\ub974\uba74 \ub05d\ub09c\ub2e4.</li> <li>\uc774 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c\ub294 \ubcc0\ud654\uac00 \ubcf4\uc774\uc9c0 \uc54a\ub294\ub2e4.</li> <li>\uac19\uc740 \uc790\ub9ac\uc5d0 \uac19\uc740 \uadf8\ub9bc\uc744 \uacc4\uc18d \uadf8\ub9ac\uae30 \ub54c\ubb38\uc774\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/01_Basic_Form/#_1","title":"\uc120 \uadf8\ub9ac\uae30","text":"<ul> <li>\uc120\uc744 \uadf8\ub9ac\ub294 \uac83\uc740 \ub450 \uc810\uc744 \uc5f0\uacb0\ud558\ub294 \uac83\uc774\ub2e4.</li> <li>line \uba85\ub839\uc5d0 \ub450 \uc810\uc758 \uc88c\ud45c\ub97c \uc54c\ub824\uc8fc\uba74 \uc120\uc774 \uadf8\uc5b4\uc9c4\ub2e4.</li> <li>line(x1, y1, x2, y2) \ud615\uc2dd</li> <li>\uadf8\ub9bc\ud310\uc758 \uc67c\ucabd \uc0c1\ub2e8\uc774 x, y\uc758 \uc6d0\uc810 (0, 0)\uc774\ub2e4.</li> <li>\uc774\ubc88 \ucf54\ub4dc\uc5d0\uc11c\ub294 \uc8101(50, 100)\uc5d0\uc11c \uc8102(500, 200)\uae4c\uc9c0 \ub450 \uc810\uc744 \uc787\ub294 \uc120\uc744 \uadf8\ub9b0\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/01_Basic_Form/#_2","title":"\uc6d0 \uadf8\ub9ac\uae30","text":"<ul> <li>\uc6d0 \uadf8\ub9ac\uae30\ub294 \uc911\uc2ec\uc810\uc758 \uc704\uce58\uc640 \uc9c0\ub984\uc744 \uc54c\ub824\uc8fc\uba74 \ub41c\ub2e4.</li> <li>circle(x, y, diameter) \ud615\uc2dd</li> <li>\uadf8\ub9bc\ud310\uc758 \uc67c\ucabd \uc0c1\ub2e8\uc774 x, y\uc758 \uc6d0\uc810 (0, 0)\uc774\ub2e4.</li> <li>\uc774\ubc88 \ucf54\ub4dc\uc5d0\uc11c\ub294 \uc6d0\uc810(200, 150)\uc5d0 \uc9c0\ub984 120\uc778 \uc6d0\uc744 \uadf8\ub9b0\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/02_Env_Vars/","title":"2. \ub9c8\uc6b0\uc2a4 \uc704\uce58\ub97c \ub098\ud0c0\ub0b4\uae30","text":""},{"location":"01_Processing_Basic/02_Env_Vars/#_1","title":"\ub9c8\uc6b0\uc2a4 \uc704\uce58\uc5d0 \uac00\ub85c/\uc138\ub85c \uc120 \uadf8\ub9ac\uae30","text":"proc-002.pde<pre><code>void setup() {\n    size(640, 480);\n}\n\nvoid draw() {\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> <ul> <li>\ud504\ub85c\uc138\uc2f1\uc5d0\ub294 \uc2dc\uc2a4\ud15c \uc815\ubcf4\ub97c \uc54c \uc218 \uc788\ub294 \ud658\uacbd\ubcc0\uc218\uac00 \uc788\ub2e4.</li> <li>\uc774\ubc88\uc5d0\ub294 width, height, mouseX, mouseY \uc774\ub807\uac8c 4\uac00\uc9c0\ub97c \uc0ac\uc6a9\ud55c\ub2e4.</li> <li>width\uc640 height\ub294 size()\uc5d0 \uc785\ub825\ud588\ub358 \uac00\ub85c, \uc138\ub85c \ud06c\uae30\ub2e4.</li> <li>mouseX, mouseY\ub294 \ud604\uc7ac \ub9c8\uc6b0\uc2a4\uac00 \ub3c4\ud654\uc9c0 \uc704\uc5d0 \uc704\uce58\ud55c \uc88c\ud45c\ub2e4.</li> </ul> <p>\ucf54\ub4dc \uc124\uba85 - \ub9c8\uc6b0\uc2a4\uac00 \uc788\ub294 \uc704\uce58\uc5d0 \uac00\ub85c, \uc138\ub85c \uc120\uc744 \uadf8\ub838\ub2e4. - \ub9c8\uc6b0\uc2a4\uac00 \uc774\ub3d9\ud558\uba74 \uc120\uc774 \uacc4\uc18d \ub098\ud0c0\ub09c\ub2e4. - \ub9c8\uc6b0\uc2a4 \uc6c0\uc9c1\uc784\uc744 \uadf8\ub9bc\uc73c\ub85c \ub098\ud0c0\ub0b4\ub294 \uac83\uc774\ub2e4. - \uc774\ubbf8 \uc788\ub358 \uc790\ub9ac\uc758 \uc120\uc774 \uadf8\ub300\ub85c \uc788\uc73c\uba74\uc11c \uc0c8\ub85c\uc6b4 \uc120\uc774 \uadf8\ub824\uc9c0\ub2c8 \uc810\uc810 \ud654\uba74\uc774 \uaf49 \ucc28\uac8c \ub41c\ub2e4. - draw() \uc548\uc5d0 \uc788\ub294 \ub0b4\uc6a9\uc744 \ubc18\ubcf5\ud560 \ub54c\ub9c8\ub2e4 \ubc30\uacbd\uc744 \uc9c0\uc6b0\uba74 \uae54\ub054\ud55c \uc120\uc774 \uadf8\ub824\uc9c4\ub2e4. - \uc77c\ubd80\ub7ec \ubcf5\uc7a1\ud55c \uadf8\ub9b4 \uc218\ub3c4 \uc788\uace0, \uae54\ub054\ud55c \uc120\ubd84\uc744 \ud45c\ud604\ud560 \uc218\ub3c4 \uc788\ub2e4.</p>"},{"location":"01_Processing_Basic/02_Env_Vars/#_2","title":"\uae54\ub054\ud55c \uadf8\ub9bc\uc73c\ub85c \ud45c\uc2dc\ud558\uae30","text":"proc-002.pde<pre><code>void setup() {\n    size(640, 480);\n}\n\nvoid draw() {\n    background(255);\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> <ul> <li>Line 6\uc5d0 \uc788\ub294 background(255); \ubb38\uc7a5\uc774 \ubc30\uacbd\uc744 \ud770\uc0c9\uc73c\ub85c \uce60\ud55c\ub2e4\ub294 \uac83\ub97c \ub73b\ud55c\ub2e4.</li> <li>\ucc38\uace0\ub85c 255\ub294 \ud770\uc0c9, 0\uc740 \uac80\uc815\uc0c9, 0\uc5d0\uc11c 255 \uc0ac\uc774 \uac12\uc740 \ud770\uc0c9\uacfc \uac80\uc740\uc0c9 \uc0ac\uc774\uc758 \uc911\uac04\uac12\uc774 \ub41c\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/03_Vars/","title":"3. \ubcc0\uc218 Variable","text":"<ul> <li>\uadf8\ub9bc\ud310\uc758 \uc911\uc2ec\uc5d0\uc11c \uc67c\ucabd\uacfc \uc624\ub978\ucabd\uc5d0 \uc6d0\uc744 2\uac1c \uadf8\ub9b0\ub2e4. \uac01\uac01 1\uac1c\uc529, \uc9c0\ub984\uc774 150\uc778 \uc6d0</li> <li>\ub9c8\uc6b0\uc2a4 \uc704\uce58 \ud45c\uc2dc\ub294 \uadf8\ub300\ub85c \ud55c\ub2e4.</li> </ul> proc-003.pde<pre><code>void setup() {\n    size(640, 480);\n}\n\u200b\nvoid draw() {\n    background(255);\n    circle(width/2 -100, height/2, 150);\n    circle(width/2 +100, height/2, 150);\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> <ul> <li>7\ubc88 8\ubc88 \uc904\uc5d0 circle \uba85\ub839\uc5d0\uc11c <code>width/2</code> \uac00 \uc4f0\uc600\ub2e4.</li> <li>\ud504\ub85c\uc138\uc2f1\uc758 \uadf8\ub9bc\ud310 \uac00\ub85c\ud06c\uae30\ub97c 2\ub85c \ub098\ub208 \uac12\uc774\ub2e4. \uc5ec\uae30\uc11c\ub294 640\uc758 \ubc18\uc778 320\uc774 \ub41c\ub2e4.</li> <li><code>setup()</code>\uc758 <code>size()</code>\uc5d0\uc11c \uc22b\uc790\ub97c \ubc14\uafb8\uba74 <code>width/2</code>\uac12\ub3c4 \uc790\ub3d9\uc73c\ub85c \uc218\uc815\ub41c\ub2e4.</li> <li><code>width</code>\ub77c\ub294 \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74 \uc22b\uc790\uac00 \ubc14\ub014 \ub54c\ub9c8\ub2e4 \uc5ec\ub7ec\uacf3\uc5d0 \uc788\ub294 \uc22b\uc790\ub97c \ud568\uaed8 \ubc14\uafd4\uc57c \ud55c\ub2e4.</li> <li>\ub9c8\uc6b0\uc2a4\uc758 \uc88c\ud45c\ucc98\ub7fc \uc22b\uc790\uac00 \uacc4\uc18d \ubc14\ub014 \uc218 \uc788\uc73c\ubbc0\ub85c \ubcc0\uc218\ub97c \uc0ac\uc6a9\ud558\uba74 \uc5ec\ub7ec \uc0c1\ud669\uc5d0 \ub300\ucc98\ud560 \uc218 \uc788\ub2e4.</li> <li><code>width/2 \uc640 height/2</code> \ucc98\ub7fc \ubcc0\uc218\ub294 \uadf8 \uac12\uc5d0 \uacc4\uc0b0\uc744 \ud560 \uc218 \uc788\ub2e4.</li> <li>\ud654\uba74(\uadf8\ub9bc\ud310) \uac00\ub85c\ud06c\uae30 \uc808\ubc18, \uc138\ub85c\ud06c\uae30 \uc808\ubc18\uc5d0 \ud574\ub2f9\ud558\ub294 \uc704\uce58\uac00 \ud654\uba74\uc758 \uc911\uc2ec\uc774\ub2e4.</li> <li>\uc911\uc2ec\uc5d0\uc11c \uac00\ub85c \ubc29\ud5a5\uc73c\ub85c -100, +100 \uc704\uce58\uc5d0 \uc6d0\uc744 \uadf8\ub9ac\uba74 \ud654\uba74\uc758 \uc911\uc2ec\uc5d0\uc11c \uc67c\ucabd\uacfc \uc624\ub978\ucabd\uc5d0 \uc801\ub2f9\ud788 \ubc8c\uc5b4\uc9c4 \uadf8\ub9bc\uc774 \uadf8\ub824\uc9c4\ub2e4.</li> <li><code>size()</code> \uc548\uc5d0 \uc788\ub294 \uc22b\uc790\ub97c \ubc14\uafb8\ub354\ub77c\ub3c4 2\uac1c\uc758 \uc6d0\uc740 \ud56d\uc0c1 \ud654\uba74\uc758 \uc911\uc2ec\uc5d0\uc11c \uc9c0\uc815\ub41c \uac70\ub9ac\ub9cc\ud07c \ub5a8\uc5b4\uc838 \uc704\uce58\ud55c\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/04_Using_Vars/","title":"4. \ubcc0\uc218 \uc0ac\uc6a9\ud558\uae30","text":"<p>\uc6d0\uc758 \uc911\uc2ec\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \uc704\uce58\uae4c\uc9c0 \uc120\uc744 \uadf8\ub824\ubcf4\uc790.</p> <p></p> proc-004.pde<pre><code>int x1, y1, x2, y2;\n\nvoid setup() {\n    size(640, 480);\n}\n\u200b\nvoid draw() {\n    background(255);\n\n    // \ub450 \uc6d0\uc758 \uc911\uc2ec\uc810 \uc88c\ud45c\uac12 \uc124\uc815\ud558\uae30\n    x1 = (width / 2) - 100;\n    x2 = (width / 2) + 100;\n    y1 = height / 2;\n    y2 = height / 2;\n\n    // \uc6d0 2\uac1c \uadf8\ub9ac\uae30\n    circle(x1, y1, 150);\n    circle(x2, y2, 150);\n\n    // \uc6d0\uc758 \uc911\uc2ec\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \uae4c\uc9c0 \uc120 \uadf8\ub9ac\uae30\n    line(x1, y1, mouseX, mouseY);\n    line(x2, y2, mouseX, mouseY);\n\n    // \ub9c8\uc6b0\uc2a4 \uc704\uce58 \ud45c\uc2dc\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> <ul> <li>\uc120 \uadf8\ub9ac\uae30 <code>line()</code>\uc744 \uc0ac\uc6a9\ud55c\ub2e4.</li> <li>\uc6d0\uc758 \uc911\uc2ec\uc810\uc744 \ud45c\uc2dc\ud558\ub294 x1, y2, x2, y2 \uc88c\ud45c\ub97c \ubcc0\uc218\ub85c \ub9cc\ub4e0\ub2e4. (Line 1)</li> <li>\uc6d0\uc758 \uc911\uc2ec\uc810\uc758 \uc88c\ud45c\ub97c \uc800\uc7a5\ud558\ub294 \ubcc0\uc218\ub294 <code>\uc22b\uc790</code> \ud615\uc2dd\uc758 \uac12\uc744 \uac00\uc9c0\uae30 \ub54c\ubb38\uc5d0 \ubcc0\uc218\uc758 \uc885\ub958\ub97c <code>int</code> \ud0c0\uc785\uc774\ub77c\uace0 \uc120\uc5b8\ud55c\ub2e4. (line 1)</li> <li><code>int : integer</code> int \ub294 <code>\uc815\uc218</code>\ub97c \uc758\ubbf8\ud558\ub294 \uae30\ud638\ub2e4.</li> <li>Line 1\uc740 \"\uc774\uc81c\ubd80\ud130 \uc815\uc218 \ud615\uc2dd\uc758 data\ub97c \uc800\uc7a5\ub420 \uc218 \uc788\ub294 \ubcc0\uc218 x1, y1, x2, y2 \ub97c \uc0ac\uc6a9\ud55c\ub2e4.\" \ub77c\ub294 \uc758\ubbf8\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/05_Calc_Position/","title":"5. \uc88c\ud45c \uacc4\uc0b0\ud558\uae30","text":"<p>\uc6d0\uc758 \uc911\uc2ec\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \uc704\uce58\ub85c \uc774\uc5b4\uc9c0\ub294 \uc120\uc744 \uadf8\ub9ac\ub294\ub370, \uc6d0 \ubc16\uc73c\ub85c \uc090\uc838 \ub098\uc624\uc9c0 \uc54a\uac8c \uadf8\ub9ac\ub824\uace0 \ud55c\ub2e4.</p> <p>\uc774 \ubd80\ubd84\uc740 \uc57d\uac04\uc758 \uacc4\uc0b0\uc774 \ud544\uc694\ud55c\ub370, \ucf54\ub4dc\ub97c \ub2e8\uc21c\ud558\uac8c \ubcf4\uae30 \uc704\ud574 \uadf8\ub9bc\uc744 \ud558\ub098\ub9cc \uadf8\ub824\uc11c \uc2dc\ub3c4\ud574 \ubcf4\uc790.</p>"},{"location":"01_Processing_Basic/05_Calc_Position/#_1","title":"\ub9c8\uc6b0\uc2a4 \uc704\uce58\uae4c\uc9c0 \uc120 \uadf8\ub9ac\uae30","text":"proc-005.pde<pre><code>float x1, y1;\nfloat dimeter = 150;\n\nvoid setup() {\n    size(640, 480);\n}\n\u200b\nvoid draw() {\n    background(255);\n\n    x1 = (width / 2) - 100;\n    y1 = height / 2;\n\n    circle(x1, y1, diameter);\n\n    line(x1, y1, mouseX, mouseY);\n\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> <ul> <li>\uc6d0 1\uac1c\ub9cc \uadf8\ub9ac\uae30</li> <li>\uc774\ubc88\uc5d0\ub294 Line 1\uc5d0\uc11c <code>int</code> \ub300\uc2e0 <code>float</code>\ub97c \uc0ac\uc6a9\ud588\ub2e4.</li> <li><code>float</code>\ub294 \uc18c\uc22b\uc810\uc774 \uc788\ub294 \uc22b\uc790\ub97c \uc758\ubbf8\ud55c\ub2e4.</li> <li>\uc5ec\uae30\uc11c\ub294 \ub098\ub204\uae30\uc640 \uc218\ud559 \uacc4\uc0b0\uc774 \ud544\uc694\ud574\uc11c \uc815\uc218 \ubcf4\ub2e4\ub294 \uc18c\uc22b\uc810\uc774 \uc788\ub294 \uc22b\uc790 \ud615\uc2dd\uc73c\ub85c \ubc14\uafe8\ub2e4.</li> <li>\ubc18\uc9c0\ub984 150\ub3c4 \uc218\uc815\ud558\uae30 \ud3b8\ud558\ub3c4\ub85d \ubcc0\uc218 <code>diameter</code>\ub97c \ub9cc\ub4e4\uc5b4 \uc4f4\ub2e4. (Line 2, 14)</li> </ul>"},{"location":"01_Processing_Basic/05_Calc_Position/#_2","title":"\ub9c8\uc6b0\uc2a4 \ubc29\ud5a5\uc73c\ub85c \uc120 \uadf8\ub9ac\uae30","text":"proc-005-1.pde<pre><code>float x1, y1;\nfloat diameter = 150;\n\nvoid setup() {\n    size(640, 480);\n}\n\u200b\nvoid draw() {\n    background(255);\n\n    x1 = (width / 2) - 100;\n    y1 = height / 2;\n\n    // \uc6d0\uc758 \uc911\uc2ec\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \uc704\uce58 \ubc29\ud5a5 \uac01\ub3c4\ub97c \uacc4\uc0b0\ud558\uace0\n    // \ubc18\uc9c0\ub984 \uae38\uc774\ub9cc\ud07c \ub5a8\uc5b4\uc9c4 \uc790\ub9ac\uc758 \uc88c\ud45c\ub97c \uad6c\ud55c\ub2e4.\n    float ta, tx, ty;\n    ta = atan2(mouseY - y1, mouseX - x1);\n    tx = x1 + cos(ta) * diameter / 2;\n    ty = y1 + sin(ta) * diameter / 2;\n\n    // \uc6d0\uc744 \uadf8\ub9ac\uace0, \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5\uc758 \uc0c8 \uc88c\ud45c\uae4c\uc9c0 \uc120\uc744 \uadf8\ub9b0\ub2e4.\n    circle(x1, y1, diameter);\n    line(x1, y1, tx, ty);\n\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> <ul> <li>\uc6d01\uac1c \uadf8\ub9ac\uae30\uc5d0\uc11c \uc218\uc815\ud55c\ub2e4.</li> <li>Line 14-23 \uc0ac\uc774\uc758 \ub0b4\uc6a9\uc774 \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5\uc73c\ub85c \uc0c8 \uc88c\ud45c\ub97c \uad6c\ud558\ub294 \ubc29\ubc95\uc774\ub2e4.</li> <li><code>ta</code>\ub294 \uc6d0\uc758 \uc911\uc2ec(x1, y1)\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \uc704\uce58\uae4c\uc9c0\uc758 \uac01\ub3c4\ub97c \uad6c\ud574\uc11c \uc800\uc7a5\ud558\ub294 \ubcc0\uc218\ub2e4.</li> <li><code>tx</code>\ub294 \uc6d0\uc758 \uc911\uc2ec\uc5d0\uc11c ta \uac01\ub3c4\ub85c, \uc6d0\uc758 \ubc18\uc9c0\ub984 \ub9cc\ud07c \ub5a8\uc5b4\uc9c4 \uacf3\uc758 x \uc88c\ud45c\ub97c \uc800\uc7a5\ud55c\ub2e4.</li> <li><code>ty</code>\ub294 \uc6d0\uc758 \uc911\uc2ec\uc5d0\uc11c ta \uac01\ub3c4\ub85c, \uc6d0\uc758 \ubc18\uc9c0\ub984 \ub9cc\ud07c \ub5a8\uc5b4\uc9c4 \uacf3\uc758 y \uc88c\ud45c\ub97c \uc800\uc7a5\ud55c\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/05_Calc_Position/#_3","title":"\ub9c8\uc6b0\uc2a4 \ubc29\ud5a5\uc73c\ub85c \uc120 \uadf8\ub9ac\uae30","text":"<ul> <li><code>atan2()</code> \ub294 \ub450 \uc810 \uc0ac\uc774\uc758 \uac01\ub3c4\ub97c \uc54c\ub824\uc900\ub2e4.</li> <li>\uadf8\ub9bc\uc5d0\uc11c <code>atan2(mouseY - y, mouseX - x)</code> \ud615\uc2dd\uc73c\ub85c \uc0ac\uc6a9\ud55c\ub2e4.</li> <li><code>atan2()</code>\uc5d0\ub294 Y \uc88c\ud45c\ub97c \uba3c\uc800 \uacc4\uc0b0\ud558\ub294 \uac83\uc774 \ud2b9\uc774\uc0ac\ud56d\uc774\ub2e4.</li> <li><code>atan2()</code>\uc73c\ub85c \uad6c\ud55c \uac01\ub3c4\uac12\uc5d0 <code>sin()</code>, <code>cos()</code> \uacc4\uc0b0\uc744 \ucd94\uac00\ud558\uba74 \uc88c\ud45c\ub97c \uad6c\ud560 \uc218 \uc788\ub2e4.</li> <li><code>atan2()</code>\uc73c\ub85c \uad6c\ud55c \uac01\ub3c4\uc5d0 <code>sin()</code> \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uba74 Y \uc88c\ud45c \uac12\uc744 \uad6c\ud55c\ub2e4.</li> <li><code>\ud604\uc7ac\uc704\uce58 Y \uc88c\ud45c + (sin()\uc5d0 atan2()\ub85c \uad6c\ud55c \uac01\ub3c4\uac12 \ub123\uc5b4\uc11c \uc54c\uac8c\ub41c Y \uac12 * \uac70\ub9ac)</code> \uacc4\uc0b0\uc73c\ub85c \ud604\uc7ac\uc704\uce58\uc5d0\uc11c atan2()\ub85c \uad6c\ud55c \uac01\ub3c4\ub85c, \uc9c0\uc815\ud55c \uac70\ub9ac\ub9cc\ud07c\uc758 Y \uc88c\ud45c\ub97c \uad6c\ud55c\ub2e4.</li> <li><code>atan2()</code>\uc73c\ub85c \uad6c\ud55c \uac01\ub3c4\uc5d0 <code>cos()</code> \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\uba74 X \uc88c\ud45c \uac12\uc744 \uad6c\ud55c\ub2e4.</li> <li>Line 22-24 \uc0ac\uc774\uc758 \uacc4\uc0b0\uc744 \uacf5\uc2dd\ucc98\ub7fc \uc0ac\uc6a9\ud558\uc790.</li> </ul>"},{"location":"01_Processing_Basic/06_Class/","title":"6. Class \uc0ac\uc6a9\ud558\uae30","text":"<p>\uc6d0\uc758 \uc911\uc2ec\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5\uc758 \uc120\uc744 \uadf8\ub9ac\ub294 \uc6d0\uc744 \ud558\ub098 \ub9cc\ub4e4\uc5c8\ub2e4. \uc774\ub7f0 \uc6d0\uc774 \uc5ec\ub7ec \uac1c\uac00 \ud544\uc694\ud558\ub2e4\uba74, \uadf8\ub54c \ub9c8\ub2e4 \uc6d0\uc758 \uc911\uc2ec \uc88c\ud45c \ubcc0\uc218\ub97c \ub9cc\ub4e4\uc5b4\uc57c \ud574\uc11c \ubd88\ud3b8\ud558\ub2e4. \uc5ec\uae30\uc11c\uc758 \uacbd\uc6b0\ucc98\ub7fc, \uc6d0 \ubaa8\uc591\uc774 \uac19\uace0 \ud654\uc0b4\ud45c \ubc29\ud5a5\uc774 \ub2e4\ub978 \uac83\uc744 \ud45c\ud604\ud558\uae30 \uc704\ud574 <code>Class</code>\ub97c \uc0ac\uc6a9\ud55c\ub2e4. (\ub2e4\ub978 \uc704\uce58\uc5d0\uc11c \ub9c8\uc6b0\uc2a4\ub97c \ubc14\ub77c\ubcf4\ub2c8 \ud654\uc0b4\ud45c \ubc29\ud5a5\uc774 \ub2e4\ub974\ub2e4)</p> <p><code>Class</code>\ub294 \uac19\uc740 \uc131\uc9c8\uc744 \uac00\uc9c0\uba74\uc11c \ub2e4\ub978 \ud45c\ud604\uc744 \ud558\uae30 \uc704\ud55c \uac83\uc774\ub2e4.</p> <p>\uc55e\uc5d0\uc11c \ub9cc\ub4e0 \uc6d0 1\uac1c\ub97c <code>class</code>\ub97c \uc774\uc6a9\ud574 \ub9cc\ub4e4\uace0 \ud65c\uc6a9\ud574 \ubcf4\uc790.</p>"},{"location":"01_Processing_Basic/06_Class/#_1","title":"\ud074\ub77c\uc2a4 \uc791\uc131","text":"proc-006.pde<pre><code>class CircleArrow {\n    float x;     // \uc6d0\uc758 x \uc88c\ud45c\n    float y;     // \uc6d0\uc758 y \uc88c\ud45c\n    float r;     // \uc6d0\uc758 \ubc18\uc9c0\ub984\n    float tx;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 x \uc88c\ud45c, target x\n    float ty;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 y \uc88c\ud45c, target y\n    float ta;    // \uc6d0\uc758 \uc6d0\uc810\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uac01\ub3c4, target angle\n\n    // \ud074\ub77c\uc2a4 \ubcc0\uc218\ub97c \uc0dd\uc131\ud558\uace0 \ucd08\uae30\ud654 \ud55c\ub2e4.\n    CircleArrow(float posX, float posY, float diameter) {\n        x = posX;\n        y = posY;\n        r = diameter / 2;\n        tx = 0;\n        ty = 0;\n        ta = 0;\n    }\n\n    // \ubaa9\ud45c \uc9c0\uc810\uc73c\ub85c \ubc29\ud5a5\uc744 \ucc3e\uace0, \uc6d0\uacfc \ub9cc\ub098\ub294 \uc88c\ud45c\ub97c \uacc4\uc0b0\ud574 \uc800\uc7a5\ud55c\ub2e4.\n    void show(float targetX, float targetY) {\n        ta = atan2(targetY - y, targetX - x);\n        tx = x + cos(ta) * r;\n        ty = y + sin(ta) * r;\n        circle(x, y, r * 2);\n        line(x, y, tx, ty);\n    }\n}\n</code></pre> <ul> <li>\uc5ec\ub7ec\uac1c\uc758 \uc6d0\uc744 \uadf8\ub9b4 \ub54c, \uac01\uac01\uc758 \uc6d0\uc740 \uc704\uce58\uc88c\ud45c(x, y)\uc640 \uc9c0\ub984\ub9cc \ub2e4\ub974\uace0 \ud558\ub294 \uc77c\uc740 \uac19\ub2e4.</li> <li>\uc774\ub7f4\ub54c Class\ub97c \uc774\uc6a9\ud574 \ud558\ub098\uc758 \uc6d0\ud615\uc744 \ub9cc\ub4e4\uace0, \uadf8 \uc6d0\ud615\uc744 \ud65c\uc6a9\ud574 \uac01\uac01\uc758 \uc6d0\uc744 \uc0dd\uc131\ud55c\ub2e4.</li> <li>\uc774 \ucf54\ub4dc\ub294 \ud558\ub098\uc758 \uc6d0\ud615\uc744 \ub9cc\ub4dc\ub294 \uac83\uc774\ub2e4.</li> <li>\uc6d0\ud615\uc744 \ub9cc\ub4dc\ub294 \uc0dd\uc131\ud568\uc218 <code>CircleArrow()</code>\uc640 \ub9cc\ub4e4\uc5b4\uc9c4 \uc6d0\uc744 \ubcf4\uc5ec\uc8fc\ub294 <code>show()</code> \uae30\ub2a5\uc774 \ud3ec\ud568\ub41c Class\ub2e4.</li> <li>\uc774 \ud074\ub77c\uc2a4\ub97c \uc774\uc6a9\ud574 1\uac1c\uc758 \uc6d0\uc744 \uadf8\ub824\ubcf4\uc790.</li> </ul>"},{"location":"01_Processing_Basic/06_Class/#_2","title":"\ud074\ub77c\uc2a4\ub97c \ud3ec\ud568\ud55c \uc804\uccb4 \ucf54\ub4dc","text":"<p>\ud654\uc0b4\ud45c\uac00 \uc788\ub294 \uc6d0 1\uac1c\ub97c \ud074\ub77c\uc2a4\ub85c \ud45c\ud604\ud558\uae30</p> \uba54\uc778 \ucf54\ub4dcClass \ucf54\ub4dc proc-006.pde<pre><code>CircleArrow ca;      // \ud074\ub77c\uc2a4\ub97c \uc0ac\uc6a9\ud574 ca \ub97c \uc120\uc5b8\ud55c\ub2e4. \uc55e\uc73c\ub85c ca\ub97c \uc4f0\uaca0\ub2e4.\n\nvoid setup() {\n    size(640, 480);\n    // \uc624\ube0c\uc81d\ud2b8 ca \ub97c \ub9cc\ub4e0\ub2e4. \uc704\uce58 \uc815\ubcf4\uc640 \uc9c0\ub984\uc744 \uc54c\ub824\uc900\ub2e4.\n    ca = new CircleArrow((width/2) -100, height/2, 150);\n}\n\nvoid draw() {\n    background(255);\n\n    // ca\uc758 \ud654\uc0b4\ud45c\uac00 \ub9c8\uc6b0\uc2a4 \uc704\uce58\ub97c \ud5a5\ud558\ub3c4\ub85d \uc5c5\ub370\uc774\ud2b8 \ud558\uace0, \ubcf4\uc5ec\uc900\ub2e4.\n    ca.show(mouseX, mouseY);\n\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> CircleArrow.pde<pre><code>class CircleArrow {\n    float x;     // \uc6d0\uc758 x \uc88c\ud45c\n    float y;     // \uc6d0\uc758 y \uc88c\ud45c\n    float r;     // \uc6d0\uc758 \ubc18\uc9c0\ub984\n    float tx;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 x \uc88c\ud45c, target x\n    float ty;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 y \uc88c\ud45c, target y\n    float ta;    // \uc6d0\uc758 \uc6d0\uc810\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uac01\ub3c4, target angle\n\n    // \ud074\ub77c\uc2a4 \ubcc0\uc218\ub97c \uc0dd\uc131\ud558\uace0 \ucd08\uae30\ud654 \ud55c\ub2e4.\n    CircleArrow(float posX, float posY, float diameter) {\n        x = posX;\n        y = posY;\n        r = diameter / 2;\n        tx = 0;\n        ty = 0;\n        ta = 0;\n    }\n\n    // \ubaa9\ud45c \uc9c0\uc810\uc73c\ub85c \ubc29\ud5a5\uc744 \ucc3e\uace0, \uc6d0\uacfc \ub9cc\ub098\ub294 \uc88c\ud45c\ub97c \uacc4\uc0b0\ud574 \uc800\uc7a5\ud55c\ub2e4.\n    void show(float targetX, float targetY) {\n        ta = atan2(targetY - y, targetX - x);\n        tx = x + cos(ta) * r;\n        ty = y + sin(ta) * r;\n        circle(x, y, r * 2);\n        line(x, y, tx, ty);\n    }\n}\n</code></pre> <p>\ud074\ub77c\uc2a4 \ucf54\ub4dc\uac00 \ubcc4\ub3c4\ub85c \ube60\uc9c0\uba74\uc11c \uba54\uc778\ucf54\ub4dc\ub294 \uac04\ub2e8\ud558\uac8c \uc791\uc131\ub418\uc5c8\ub2e4.</p> <ul> <li>Line 1 \uc5d0\uc11c <code>ca</code>\ub77c\uace0 \ubd80\ub97c Class \ud558\ub098\ub97c \uc9c0\uc815\ud588\ub2e4.</li> <li>Line 1 \uc740 CircleArrow \ub77c\ub294 \ud074\ub77c\uc2a4 \uc6d0\ud615\uc744 \ub530\ub974\ub294 ca\ub77c\ub294 \uac83\uc744 \uc0ac\uc6a9\ud560 \uac83\uc774\ub2e4(underline) \ub77c\ub294 \uc758\ubbf8\ub2e4.</li> <li>Line 6 \uc5d0\uc11c <code>ca</code>\ub97c \uc0dd\uc131\ud55c\ub2e4. \uc704\uce58\uc640 \uc9c0\ub984\uc744 \uc5ec\uae30\uc11c \uc815\ud55c\ub2e4.</li> <li>Line 13 \uc5d0\uc11c <code>ca</code>\ub97c \uc0ac\uc6a9\ud55c\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/06_Class/#_3","title":"\ud074\ub77c\uc2a4 \ucf54\ub4dc \uc800\uc7a5 \ubc29\ubc95","text":"<ul> <li> <p>\ud074\ub77c\uc2a4 \ucf54\ub4dc\ub294 \uba54\uc778\ucf54\ub4dc\uc5d0 \ud568\uaed8 \uc791\uc131\ud558\uae30\ub3c4 \ud558\uace0 \ub530\ub85c \uc800\uc7a5 \ud574 \uc7ac\uc0ac\uc6a9 \ud560 \uc218 \uc788\ub2e4.</p> </li> <li> <p>\ud074\ub77c\uc2a4 \ucf54\ub4dc\ub294 \ub530\ub85c \uc791\uc131\ud560 \uacbd\uc6b0, \uba54\uc778 \ucf54\ub4dc\uac00 \uc788\ub294 \ud3f4\ub354\uc5d0 \ud568\uaed8 \uc800\uc7a5\ud558\uc5ec \uc0ac\uc6a9\ud55c\ub2e4.</p> </li> <li> <p>\ud074\ub77c\uc2a4 \ud30c\uc77c\uc744 \ub530\ub85c \uc800\uc7a5\ud560 \ub54c, \ud074\ub77c\uc2a4 \ucf54\ub4dc\uc758 \ud30c\uc77c\uba85\uc740 \ud074\ub77c\uc2a4\uc758 \uc774\ub984\uacfc \uac19\uc544\uc57c \ud55c\ub2e4. (CircleArrow.pde)</p> </li> <li> <p>\uba54\uc778 \ucf54\ub4dc\uc640 \ud074\ub77c\uc2a4 \ucf54\ub4dc\ub97c \uac19\uc740 \ud30c\uc77c(proc-007.pde)\uc5d0 \uc791\uc131\ud560 \uacbd\uc6b0 class \ub0b4\uc6a9\uc740 \uba54\uc778 \ud30c\uc77c \ub0b4 \uc5b4\ub514\uc5d0 \uc704\uce58\ud574\ub3c4 \uc0c1\uad00 \uc5c6\ub2e4.</p> </li> <li>\uc5ec\uae30\uc11c\ub294 \ub4a4\ucabd\uc5d0 \uc704\uce58 \uc2dc\ud0a4\ub294 \ubc29\ubc95\uc744 \uc37c\ub2e4.</li> <li>\ub098\uc911\uc5d0 \uc218\uc815\ud560 \ub54c Class\ub97c \uc218\uc815\ud558\ub294 \uac83 \ubcf4\ub2e4 \uba54\uc778\ucf54\ub4dc \uc218\uc815\ud560 \uc77c\uc774 \ub354 \ub9ce\uae30 \ub54c\ubb38\uc774\ub2e4.</li> </ul> proc-006.pde<pre><code>    void setup() {\n        // \ub0b4\uc6a9\n    }\n\n    void draw() {\n        // \ub0b4\uc6a9\n    }\n\n    class CircleArrow {\n        // \ud074\ub77c\uc2a4 \ub0b4\uc6a9\n    }\n</code></pre>"},{"location":"01_Processing_Basic/06_Class/#_4","title":"\uc2e4\ud589\ud55c \ubaa8\uc2b5","text":"<ul> <li>\ub9c8\uc6b0\uc2a4\ub97c \uc6c0\uc9c1\uc774\uba74 \uc6d0 \uc548\uc5d0 \uc788\ub294 \uc120\uc774 \ub9c8\uc6b0\uc2a4\uac00 \uc788\ub294 \uc704\uce58\ub97c \ub530\ub77c \ub2e4\ub2cc\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/07_Class_2ea/","title":"7. Class\ub85c \uc6d0 2\uac1c \uadf8\ub9ac\uae30","text":"<p>\ud074\ub77c\uc2a4\ub97c \uc0ac\uc6a9\ud574 \uc6d0\uc744 2\uac1c \uadf8\ub824 \ubcf4\uc790.</p> <p></p> \uba54\uc778 \ucf54\ub4dcClass \ucf54\ub4dc proc-007.pde<pre><code>CircleArrow ca1, ca2;      // \ud074\ub77c\uc2a4\ub97c \uc0ac\uc6a9\ud574 ca \ub97c \uc120\uc5b8\ud55c\ub2e4. \uc55e\uc73c\ub85c ca\ub97c \uc4f0\uaca0\ub2e4.\n\nvoid setup() {\n    size(640, 480);\n\n    ca1 = new CircleArrow((width/2) -100, height/2, 150);\n    ca2 = new CircleArrow((width/2) +100, height/2, 150);\n}\n\nvoid draw() {\n    background(255);\n\n    ca1.show(mouseX, mouseY);\n    ca2.show(mouseX, mouseY);\n\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> CircleArrow.pde<pre><code>//\n// \ub9cc\ub4e4\uc5b4 \ub454 Class\ub97c \uadf8\ub300\ub85c \uc4f4\ub2e4\n//\nclass CircleArrow {\n    float x;     // \uc6d0\uc758 x \uc88c\ud45c\n    float y;     // \uc6d0\uc758 y \uc88c\ud45c\n    float r;     // \uc6d0\uc758 \ubc18\uc9c0\ub984\n    float tx;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 x \uc88c\ud45c, target x\n    float ty;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 y \uc88c\ud45c, target y\n    float ta;    // \uc6d0\uc758 \uc6d0\uc810\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uac01\ub3c4, target angle\n\n    // \ud074\ub77c\uc2a4 \ubcc0\uc218\ub97c \uc0dd\uc131\ud558\uace0 \ucd08\uae30\ud654 \ud55c\ub2e4.\n    CircleArrow(float posX, float posY, float diameter) {\n        x = posX;\n        y = posY;\n        r = diameter / 2;\n        tx = 0;\n        ty = 0;\n        ta = 0;\n    }\n\n    // \ubaa9\ud45c \uc9c0\uc810\uc73c\ub85c \ubc29\ud5a5\uc744 \ucc3e\uace0, \uc6d0\uacfc \ub9cc\ub098\ub294 \uc88c\ud45c\ub97c \uacc4\uc0b0\ud574 \uc800\uc7a5\ud55c\ub2e4.\n    void show(float targetX, float targetY) {\n        ta = atan2(targetY - y, targetX - x);\n        tx = x + cos(ta) * r;\n        ty = y + sin(ta) * r;\n        circle(x, y, r * 2);\n        line(x, y, tx, ty);\n    }\n}\n</code></pre> <ul> <li>\uba54\uc778\ucf54\ub4dc Line 6-7 \uc5d0\uc11c <code>ca1, ca2</code>\ub97c \uc124\uc815\ud55c\ub2e4.</li> <li>\uba54\uc778\ucf54\ub4dc Line 13-14 \uc5d0\uc11c <code>ca1, ca2</code>\ub97c \uc0ac\uc6a9\ud55c\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/08_Serial_Comm/","title":"8. Serial \ud1b5\uc2e0","text":"<p>\uc2dc\ub9ac\uc5bc \ud3ec\ud2b8\ub97c \uc0ac\uc6a9\ud574 \uc678\ubd80\uc640 \ud1b5\uc2e0\ud558\uae30</p>"},{"location":"01_Processing_Basic/08_Serial_Comm/#serial-write","title":"Serial Write","text":"proc-008.pde<pre><code>import processing.serial.*;\n\nSerial port;\n\nvoid setup() {\n    size(255, 255);\n    port = new Serial(this, \"COM3\", 115200);\n}\n\nvoid draw() {\n    background(255);\n\n    port.write(mouseX + \", \" + mouseY + '\\n');\n\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> <ul> <li>Line 7 \uc5d0\uc11c \"COM3\" \uc758 \ub0b4\uc6a9\uc740 \ucef4\ud4e8\ud130 \uc2dc\ub9ac\uc5bc \ud3ec\ud2b8\uc758 \uc774\ub984\uc73c\ub85c \ubc14\uafbc\ub2e4.</li> <li>\ucc38\uace0\ub85c \uc2dc\ub9ac\uc5bc\ud3ec\ud2b8 \uc774\ub984\uc740 \ucef4\ud4e8\ud130\ub9c8\ub2e4 \ub2ec\ub77c\uc11c \ud655\uc778\ud574 \ubcf4\uc544\uc57c \ud55c\ub2e4.</li> <li>\uc2dc\ub9ac\uc5bc\ud3ec\ud2b8\ub85c \ucd9c\ub825\ub418\ub294 \ub0b4\uc6a9\uc740 <code>128, 332</code> \ucc98\ub7fc \uc22b\uc790\uc640 \uc27c\ud45c\ub85c \uc774\ub904\uc838 \uc788\ub2e4.</li> <li>Line 13 \uc5d0\uc11c <code>write()</code> \uc548\uc5d0 \uc9c0\uc815\ub41c \ud615\uc2dd\uacfc \ub0b4\uc6a9\uc774\ub2e4.</li> <li>\ub05d\uc5d0 \uc788\ub294 \\n \uae30\ud638\ub294 \uc804\uc1a1\ub41c \ubb38\uc7a5\uc758 \ub05d\uc744 \uc54c\ub9ac\ub294 \uac83\uc774\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/08_Serial_Comm/#serial-port","title":"Serial Port \uc774\ub984 \ucc3e\uae30","text":"proc-011-1.pde<pre><code>import processing.serial.*;\nprintArray(Serial.list());\n</code></pre> <ul> <li>\uc774\ub807\uac8c\ub9cc \uc785\ub825\ud558\uace0 \uc2e4\ud589\ud558\uba74 \uc2dc\ub9ac\uc5bc\ud3ec\ud2b8 \uc774\ub984\ub4e4\uc774 \ub098\uc628\ub2e4.</li> </ul> <ul> <li>\ubaa9\ub85d\uc5d0 \ub098\ud0c0\ub09c <code>[3] \"/dev/cu.MH-M28\"</code> \uc758 \uacbd\uc6b0, <code>/dev/cu.MH-M28</code>\uc774 \uc2dc\ub9ac\uc5bc\ud3ec\ud2b8 \uc774\ub984\uc774\ub2e4.</li> </ul>"},{"location":"01_Processing_Basic/08_Serial_Comm/#serial-read","title":"Serial Read","text":"proc-008-read.pde<pre><code>import processing.serial.*;\n\nSerial port;\nint sData = 0;\n\nvoid setup() {\n    size(255, 255);\n    port = new Serial(this, \"COM3\", 115200);\n}\n\nvoid draw() {\n    background(255);\n    fill(255, 255, 0);\n    textSize(30);\n    text(\"Var: \" + nf(sData, 4), 20, 30);\n    // nf() \uc22b\uc790\ub97c \uc9c0\uc815\ud55c \uc22b\uc790 \uc790\ub9bf\uc218\ub9cc\ud07c \ucc44\uc6cc\uc11c \ucd9c\ub825\ud55c\ub2e4\n    float x = map(sData, 0, 1023, 0, width);\n    ellipse(x, height/2, 80, 80);\n}\n\nvoid serialEvent(Serial port) {\n    String str = port.readStringUntil('\\n');\n    if(str != null) {\n        String s = trim(str);\n        sData = int(s);\n    }\n}\n</code></pre>"},{"location":"01_Processing_Basic/09_CircleSerial/","title":"9. CircleArrow + SerialWrite","text":"<p>\ub9c8\uc6b0\uc2a4 \ubc29\ud5a5\uc744 \uac00\ub974\ud0a4\ub294 \uc6d0 2\uac1c\ub97c \uadf8\ub9ac\uace0, \ud654\uc0b4\ud45c\uc758 \ubc29\ud5a5\uc744 \uc2dc\ub9ac\uc5bc\ud3ec\ud2b8\ub85c \ucd9c\ub825\ud558\uae30</p>"},{"location":"01_Processing_Basic/09_CircleSerial/#_1","title":"\uc6d0\uacfc \ub9c8\uc6b0\uc2a4\uc758 \uac01\ub3c4\ub97c \ucd9c\ub825\ud558\uae30","text":"<ul> <li>\uc55e\uc11c \uc791\uc131\ud55c \ucf54\ub4dc\ub97c \ucc38\uc870\ud574 \uac01\ub3c4\ub97c \ucd9c\ub825\ud560 \uc218 \uc788\uac8c \ud55c\ub2e4.</li> <li> <p>\ud074\ub77c\uc2a4\ub294 \uadf8\ub300\ub85c \uc4f0\uace0, \uba54\uc778 \ucf54\ub4dc\ub9cc \uc218\uc815\ud55c\ub2e4.</p> </li> <li> <p>\ucc38\uace0\ub9c1\ud06c : \ud074\ub77c\uc2a4\ub85c \uc6d0 2\uac1c \ub9cc\ub4e4\uae30</p> </li> </ul> \uba54\uc778 \ucf54\ub4dcClass \ucf54\ub4dc proc-009.pde<pre><code>CircleArrow ca1, ca2;\n\nvoid setup() {\n    size(640, 480);\n\n    ca1 = new CircleArrow((width/2) -100, height/2, 150);\n    ca2 = new CircleArrow((width/2) +100, height/2, 150);\n}\n\nvoid draw() {\n    background(255);\n\n    ca1.show(mouseX, mouseY);\n    ca2.show(mouseX, mouseY);\n\n    int deg1 = getDeg(ca1.ta);\n    int deg2 = getDeg(ca2.ta);\n    print(deg1 + \", \" + deg2 + '\\n');\n\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n\nint getDeg(float angle) {\n    float deg = degrees(angle)+90;\n    if(deg &lt; 0) deg = map(deg, -89, -1, 271, 359);\n    return (int) deg;\n}\n</code></pre> CircleArrow.pde<pre><code>//\n// \ub9cc\ub4e4\uc5b4 \ub454 Class\ub97c \uadf8\ub300\ub85c \uc4f4\ub2e4\n//\nclass CircleArrow {\n    float x;     // \uc6d0\uc758 x \uc88c\ud45c\n    float y;     // \uc6d0\uc758 y \uc88c\ud45c\n    float r;     // \uc6d0\uc758 \ubc18\uc9c0\ub984\n    float tx;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 x \uc88c\ud45c, target x\n    float ty;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 y \uc88c\ud45c, target y\n    float ta;    // \uc6d0\uc758 \uc6d0\uc810\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uac01\ub3c4, target angle\n\n    // \ud074\ub77c\uc2a4 \ubcc0\uc218\ub97c \uc0dd\uc131\ud558\uace0 \ucd08\uae30\ud654 \ud55c\ub2e4.\n    CircleArrow(float posX, float posY, float diameter) {\n        x = posX;\n        y = posY;\n        r = diameter / 2;\n        tx = 0;\n        ty = 0;\n        ta = 0;\n    }\n\n    // \ubaa9\ud45c \uc9c0\uc810\uc73c\ub85c \ubc29\ud5a5\uc744 \ucc3e\uace0, \uc6d0\uacfc \ub9cc\ub098\ub294 \uc88c\ud45c\ub97c \uacc4\uc0b0\ud574 \uc800\uc7a5\ud55c\ub2e4.\n    void show(float targetX, float targetY) {\n        ta = atan2(targetY - y, targetX - x);\n        tx = x + cos(ta) * r;\n        ty = y + sin(ta) * r;\n        circle(x, y, r * 2);\n        line(x, y, tx, ty);\n    }\n}\n</code></pre> <ul> <li>Line 16-18, 24-28 \ub0b4\uc6a9\uc774 \uc0c8\ub86d\uac8c \ucd94\uac00\ub41c \uac83\uc774\ub2e4.</li> <li>\uac01 \uc6d0\uc758 \uc911\uc2ec\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \ud3ec\uc778\ud2b8\ub864 \ud5a5\ud558\ub294 \uac01\ub3c4\ub97c \uacc4\uc0b0\ud574 \ucd9c\ub825\ud558\uace0 \uc788\ub2e4.</li> </ul> <p></p>"},{"location":"01_Processing_Basic/09_CircleSerial/#_2","title":"\uc2dc\ub9ac\uc5bc\ud3ec\ud2b8\ub85c \ucd9c\ub825\ud558\uae30","text":"proc-009.pde<pre><code>import processing.serial.*;\n\nSerial port;\n\nCircleArrow ca1, ca2;\n\nvoid setup() {\n    size(640, 480);\n\n    port = new Serial(this, \"COM3\", 115200);\n\n    ca1 = new CircleArrow((width/2) -100, height/2, 150);\n    ca2 = new CircleArrow((width/2) +100, height/2, 150);\n}\n\nvoid draw() {\n    background(255);\n\n    ca1.show(mouseX, mouseY);\n    ca2.show(mouseX, mouseY);\n\n    int deg1 = getDeg(ca1.ta) / 2;\n    int deg2 = getDeg(ca2.ta) / 2;\n    port.write(deg1 + \", \" + deg2 + '\\n');\n\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n\nint getDeg(float angle) {\n    float deg = degrees(angle)+90;\n    if(deg &lt; 0) deg = map(deg, -89, -1, 271, 359);\n    return (int) deg;\n}\n\n//\n// \uc5ec\uae30\uc5d0 Class \ucf54\ub4dc\ub97c \ub123\uc73c\uc138\uc694 !!\n//\n</code></pre> <ul> <li>\uc2dc\ub9ac\uc5bc\ud3ec\ud2b8 \uad00\ub828 Line 1, 3, 10 \ub0b4\uc6a9\uc774 \uc0c8\ub86d\uac8c \ucd94\uac00\ub41c \uac83\uc774\ub2e4.</li> <li>Line 24 \ud654\uba74\ucd9c\ub825(print) \ub300\uc2e0 \uc2dc\ub9ac\uc5bc\ud3ec\ud2b8\ub85c \ub0b4\uc6a9\uc744 \ucd9c\ub825\ud55c\ub2e4.</li> <li>\ub450 \uac01\ub3c4 \uac12\uc744 \uc2dc\ub9ac\uc5bc \ud3ec\ud2b8\ub85c \ub0b4\ubcf4\ub0b8\ub2e4.</li> <li>\uc2dc\ub9ac\uc5bc \uac12\uc774 \uc5b4\ub5bb\uc5d0 \uc0ac\uc6a9\ub420 \uc9c0\ub294 \ud504\ub85c\uc138\uc2f1\uc5d0\uc11c \uc54c \uc218 \uc5c6\ub2e4. \uadf8\uc800 \ubcf4\ub0b4\uae30\ub9cc \ud560 \ubfd0!</li> </ul>"},{"location":"02_Arduino_Basic/","title":"Arduino Start","text":"<p>Arduino\ub294 \uc7a5\uce58\ub97c \ub2e4\ub8e8\ub294\ub370 \uc0ac\uc6a9\ud55c\ub2e4. LED\ub97c \ucf1c\uac70\ub098 \ubaa8\ud130\ub97c \uc6c0\uc9c1\uc774\uace0, \uc13c\uc11c\ub97c \uc0ac\uc6a9\ud574 \uc678\ubd80\uc758 \uac12\uc744 \uc785\ub825 \ubc1b\ub294 \ub4f1, \uc2e4\uc81c\uc801\uc778 \uc6c0\uc9c1\uc784\uc744 \uac10\uc9c0\ud558\uac70\ub098 \ud45c\ud604\ud558\uae30 \uc704\ud574 \uc0ac\uc6a9\ud55c\ub2e4.</p> <ul> <li>\uc0ac\uc6a9\uc790\uc640 \uc0c1\ud638\uc791\uc6a9\uc744 \ud1b5\ud574 \uadf8\ub9bc\uc744 \ubcc0\uacbd\ud560 \uc218 \uc788\ub2e4.</li> <li>\ud558\ub4dc\uc6e8\uc5b4 \uc7a5\uce58\uc640 \uc5f0\ub3d9\ud558\uc5ec \uc7a5\uce58\uc758 \uc0c1\ud0dc\ub97c \ud45c\uc2dc\ud560 \uc218 \uc788\ub2e4.</li> <li>\uc774\ub7f0 \ud2b9\uc131\uc744 \uc0ac\uc6a9\ud574 \uace0\uc815\ub41c \uadf8\ub9bc\uc774 \uc544\ub2c8\ub77c \uc5ec\ub7ec\uac00\uc9c0 \ubcc0\ud654\ub97c \uc2e4\uc2dc\uac04\uc73c\ub85c \uadf8\ub9bc\uc5d0 \ubc18\uc601\ud560 \uc218 \uc788\ub2e4.</li> <li>\uc7a5\uce58\uc758 \uc0c1\ud0dc\ub97c \ud45c\ud604\ud558\uac70\ub098 \uc7a5\uce58\uc758 \uc6c0\uc9c1\uc784\uc744 \ubaa8\ub378\ub9c1\ud574\uc11c \ubcf4\uc5ec\uc8fc\ub294 \ud615\uc2dd\uc73c\ub85c \uc0ac\uc6a9\ub420 \uc218 \uc788\ub2e4.</li> <li>\uc5ec\uae30\uc11c\ub294 \uc7a5\uce58\uc640 \uc5f0\ub3d9\ud574\uc11c \uadf8\ub9bc\uc758 \ubcc0\ud654\ub97c \uc7a5\uce58\uc5d0 \uc804\ub2ec\ud558\ub294 \uac83\uc744 \ubaa9\ud45c\ub85c \ud55c\ub2e4.</li> </ul>"},{"location":"02_Arduino_Basic/#_1","title":"\ub2e4\uc6b4\ub85c\ub4dc","text":"<p>\uc544\ub450\uc774\ub178 \ub2e4\uc6b4\ub85c\ub4dc \ud398\uc774\uc9c0\ub85c \uc774\ub3d9</p> <p></p>"},{"location":"02_Arduino_Basic/01_Led_Circuit/","title":"1. LED \ud68c\ub85c\uad6c\uc131","text":"<p>Bread-Board (\ube75\ud310)\uc5d0 LED \ud68c\ub85c\ub97c \uad6c\uc131\ud55c\ub2e4.</p> <p></p> <ul> <li>LED\ub294 \ub2e4\ub9ac\uac00 \uae34 \ucabd\uc774 + (Anode), \uc9e7\uc740 \ucabd\uc774 - (Kathod)\uc774\ub2e4.</li> <li>\uc800\ud56d\uc740 + \ucabd\uc774\ub4e0 - \ucabd\uc774\ub4e0 \ud55c\ucabd\uc5d0\ub294 \uc9c1\ub82c\ub85c \uc5f0\uacb0\ub418\uc5b4\uc57c \ud55c\ub2e4.</li> </ul> <p></p> <ul> <li>\uc544\ub450\uc774\ub178 \uc804\uc6d0\uc744 \ube75\ud310\uc5d0 \uc5f0\uacb0\ud55c \ubaa8\uc2b5</li> </ul>"},{"location":"02_Arduino_Basic/02_Led/","title":"2. \uc544\ub450\uc774\ub178\uc5d0\uc11c LED \ucf1c\ubcf4\uae30","text":""},{"location":"02_Arduino_Basic/02_Led/#_1","title":"\ud68c\ub85c \uad6c\uc131","text":""},{"location":"02_Arduino_Basic/02_Led/#1-led","title":"\ucf54\ub4dc 1. LED \uae5c\ube61\uc774\uae30","text":"led-blink.ino<pre><code>const int led = 13;\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n}\n\nvoid loop() {\n  digitalWrite(led, HIGH);\n  delay(500);\n\n  digitalWrite(led, LOW);\n  delay(500);\n}\n</code></pre> <ul> <li>digitalWrite()\uc5d0\uc11c HIGH \uc77c\ub54c \ucf1c\uc9c0\ub294 \uac83\uacfc LOW \uc77c\ub54c \ucf1c\uc9c0\ub294 \uac83\uc758 \ud68c\ub85c\ub97c \ube44\uad50\ud574 \ubcf4\uc790.</li> <li>\uc5b4\ub290\ucabd\uc774 HIGH \uc778\uc9c0 LOW \uc778\uc9c0 \uad6c\ubd84\ud558\uae30 \uc5b4\ub835\ub2e4\uba74, \ub458 \uc911 \ud55c\ucabd delay()\uc5d0 \uc2dc\uac04\uc744 \uae38\uac8c \ub9cc\ub4e4\uace0 \uc2dc\ub3c4\ud574 \ubcf4\uc790.</li> </ul>"},{"location":"02_Arduino_Basic/02_Led/#2-led_1","title":"\ucf54\ub4dc 2. LED \ubc1d\uae30 \uc870\uc808","text":"led-analog.ino<pre><code>const int led = 13;\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n}\n\nvoid loop() {\n  analogWrite(led, 550);\n  delay(500);\n\n  analogWrite(led, 250);\n  delay(500);\n}\n</code></pre> <ul> <li>Line 8 \uc5d0\uc11c, <code>digitalWrite()</code> \ub300\uc2e0 <code>analogWrite()</code>\ub97c \uc0ac\uc6a9\ud588\ub530.</li> <li><code>analogWrite()</code>\ub294 0~255 \uc0ac\uc774 \uac12\uc744 \uc9c0\uc815\ud558\uc5ec \ubc1d\uae30\ub97c \uc870\uc808\ud560 \uc218 \uc788\ub2e4.</li> <li>\ud68c\ub85c \uad6c\uc131\uc5d0 \ub530\ub77c 0 \uc5d0\uc11c \uac00\uc7a5 \ubc1d\uc740 \uac83, 255\uc5d0\uc11c \uac00\uc7a5 \ubc1d\uc740 \uac83\uc73c\ub85c \ucc28\uc774\ub97c \ubcf4\uc778\ub2e4.</li> </ul>"},{"location":"02_Arduino_Basic/02_Led/#3-led-3","title":"\ucf54\ub4dc 3. LED 3\uad6c\uc131, \uceec\ub7ec \uc870\uc808","text":"led3color.ino<pre><code>const int red   = 9;\nconst int green = 10;\nconst int blue  = 11;\n\nvoid setup() {\n  pinMode(red, OUTPUT);\n  pinMode(green, OUTPUT);\n  pinMode(blue, OUTPUT);\n}\n\nvoid loop() {\n  analogWrite(red, 250);\n  analoglWrite(green, 150);\n  analogWrite(blue, 100);\n  delay(500);\n\n  analogWrite(red, 100);\n  analogWrite(green, 250);\n  analogWrite(blue, 150);\n  delay(500);\n}\n</code></pre>"},{"location":"02_Arduino_Basic/03_FOR-LOOP/","title":"3. FOR-Loop","text":"<p>\uc11c\uc11c\ud788 \ubc1d\uc544\uc9c0\uace0 \uc11c\uc11c\ud788 \uaebc\uc9c0\ub294 LED\ub97c \uad6c\ud604\ud574 \ubcf4\uc790.</p>"},{"location":"02_Arduino_Basic/03_FOR-LOOP/#1-led","title":"\ucf54\ub4dc 1. LED \ubc1d\uae30 \uc870\uc808","text":"led-for-loop1.ino<pre><code>const int led_pin = 13;\n\nvoid setup() {\n  pinMode(led_pin, OUTPUT);\n}\n\nvoid loop() {\n  for(int i=0; i &lt;= 255; i++) {\n    analogWrite(led_pin, i);\n    delay(10);\n  }\n  for(int i=255; i &gt;= 0; i--) {\n    analogWrite(led_pin, i);\n    delay(10);\n  }\n}\n</code></pre>"},{"location":"02_Arduino_Basic/03_FOR-LOOP/#2-led-3","title":"\ucf54\ub4dc 2. LED 3\uad6c\uc131, \uceec\ub7ec \ubc1d\uae30 \uc870\uc808","text":"led-for-loop2.ino<pre><code>const int red = 9;\nconst int green = 10;\nconst int blue = 11;\n\nvoid setup() {\n  pinMode(red, OUTPUT);\n  pinMode(green, OUTPUT);\n  pinMode(blue, OUTPUT);\n}\n\nvoid loop() {\n  for(int i=0; i &lt;= 255; i++) {\n    analogWrite(red, i);\n    analogWrite(green, 255-i);\n    analogWrite(blue, 150);\n    delay(10);\n  }\n  for(int i=255; i &gt;= 0; i--) {\n    analogWrite(red, i);\n    analogWrite(green, 255-i);\n    analogWrite(blue, 50);\n    delay(10);\n  }\n}\n</code></pre>"},{"location":"02_Arduino_Basic/04_RC_Servo_Motor/","title":"4. Servo \ubaa8\ud130 \uc0ac\uc6a9\ud558\uae30","text":""},{"location":"02_Arduino_Basic/04_RC_Servo_Motor/#1","title":"\ucf54\ub4dc 1. \uc11c\ubcf4 \ubaa8\ud130 \uc5f0\uacb0\ud558\uae30","text":"servo.ino<pre><code>#include &lt;Servo.h&gt;\n\nconst int servoPin = 9;\n\nServo sv;\n\nvoid setup() {\n  sv.attach(servoPin);\n}\n\nvoid loop() {\n  sv.write(0);\n  delay(1000);\n\n  sv.write(90);\n  delay(1000);\n\n  sv.write(180);\n  delay(1000);\n\n  sv.write(90);\n  delay(1000);\n}\n</code></pre> <ul> <li>\uc11c\ubcf4\ubaa8\ud130\ub97c \uc5f0\uacb0\ud558\uc5ec 90\ub3c4\uc529, \ucd1d 180\ub3c4 \ubc94\uc704\uc758 \uc6c0\uc9c1\uc784\uc744 \ubcf4\uc5ec\uc900\ub2e4.</li> </ul>"},{"location":"02_Arduino_Basic/04_RC_Servo_Motor/#2-2","title":"\ucf54\ub4dc 2. \uc11c\ubcf4\ubaa8\ud130 2\uac1c \uc11c\uc11c\ud788 \uc6c0\uc9c1\uc774\uae30","text":"<p>servo-for-loop.ino<pre><code>#include &lt;Servo.h&gt;\n\nconst int servoPin1 = 9;\nconst int servoPin2 = 10;\n\nServo sv1, sv2;\n\nvoid setup() {\n  sv1.attach(servoPin1, 544, 2400);\n  sv2.attach(servoPin2);\n}\n\nvoid loop() {\n  for(int i=0; i &lt;= 180; i++) {\n    sv1.write(i);\n    delay(1);\n    sv2.write(180-i);\n    delay(10);  \n  }\n  for(int i=0; i &lt;= 180; i++) {\n    sv1.write(180-i);\n    delay(1);\n    sv2.write(i);\n    delay(10);  \n  }\n}\n</code></pre> * Line 9\uc5d0\uc11c, \uc11c\ubcf4 \ubaa8\ud130\uc758 \uc88c\uc6b0 \ub05d \ubc94\uc704\ub97c \uc218\uc815\ud560 \uc218 \uc788\ub2e4. (\uae30\ubcf8\uac12 544~2400)</p>"},{"location":"02_Arduino_Basic/05_Serial_Port/","title":"5. Serial \ud3ec\ud2b8 \uc0ac\uc6a9\ud558\uae30","text":"<p>\uc2dc\ub9ac\uc5bc \ud3ec\ud2b8\ub97c \uc0ac\uc6a9\ud574 \ubcf4\uc790.</p>"},{"location":"02_Arduino_Basic/05_Serial_Port/#1-led-serial","title":"\ucf54\ub4dc 1. LED \ubc1d\uae30 \uac12\uc744 Serial\ub85c \ucd9c\ub825","text":"serialWrite.ino<pre><code>const int led = 13;\n\nvoid setup() {\n    pinMode(red, OUTPUT);\n    Serial.begin(115200);\n    Serial.println(\"===== Program Start =====\");\n}\n\nvoid loop() {\n    for(int i = 0; i &lt;= 255; i++) {\n        Serial.println(i);\n        analogWrite(red, i);\n        delay(50);\n    }\n    delay(2000);\n}\n</code></pre>"},{"location":"02_Arduino_Basic/05_Serial_Port/#2-serial-led-2","title":"\ucf54\ub4dc 2. Serial\ub85c LED 2\uac1c \ubc1d\uae30 \uc870\uc808","text":"serialRead.ino<pre><code>const int led1 = 9;\nconst int led2 = 10;\n\nvoid setup() {\n    pinMode(led1, OUTPUT);\n    pinMode(led2, OUTPUT);\n    Serial.begin(115200);\n    Serial.println(\"===== Program Start =====\");\n}\n\nvoid loop() {\n    while(Serial.available() &gt; 0) {\n        int val1 = Serial.parseInt();\n        int val2 = Serial.parseInt();\n        if(Serial.read() == '\\n') {\n            Serial.print(val1);\n            Serial.print(\", \");\n            Serial.println(val2);\n            analogWrite(led1, val1);\n            analogWrite(led2, val2);\n        }\n    }\n}\n</code></pre> <ul> <li>\uc2dc\ub9ac\uc5bc \ubaa8\ub2c8\ud130\ub85c \uac12\uc744 2\uac1c \uc785\ub825\ud574 \ubcf4\uc790 (\uc608: 120, 200)</li> <li>\uc785\ub825 \uac12\uc740 \uc27c\ud45c\ub85c \uad6c\ubd84\ud558\uc5ec \uc22b\uc790 2\uac1c\ub97c \uc785\ub825\ud55c\ub2e4.</li> </ul>"},{"location":"02_Arduino_Basic/05_Serial_Port/#3","title":"\ucf54\ub4dc 3. \uc2dc\ub9ac\uc5bc\ub85c \uc11c\ubcf4\ubaa8\ud130 \uc81c\uc5b4","text":"serialReadServo.ino<pre><code>#include &lt;Servo.h&gt;\n\nconst int SV1_PIN = 6;\nconst int SV2_PIN = 5;\n\nServo sv1, sv2;\n\nvoid setup() {\n    sv1.attach(SV1_PIN, 544, 2400);\n    sv2.attach(SV2_PIN);\n    Serial.begin(115200);\n    Serial.println(\"===== Serial Port Ready =====\");\n}\n\nvoid loop() {\n    while(Serial.available() &gt; 0) {\n        int val1 = Serial.parseInt();\n        int val2 = Serial.parseInt();\n\n        val1 = constrain(val1, 0, 180);\n        val2 = constrain(val2, 0, 180);\n\n        if(Serial.read() == '\\n') {\n            sv1.write(val1);\n            sv2.write(val2);\n            Serial.print(val1);\n            Serial.print(\", \");\n            Serial.println(val2);\n        }\n    }\n}\n</code></pre>"},{"location":"02_Arduino_Basic/06_Volume/","title":"6. \uc785\ub825\uc13c\uc11c Volume \uc0ac\uc6a9\ud558\uae30","text":""},{"location":"02_Arduino_Basic/06_Volume/#1","title":"\ucf54\ub4dc 1. \ubcfc\ub968\uac12 \uc77d\uae30","text":"volumeSerial.ino<pre><code>const int vol_pin = A0;\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println(\"===== Program Start =====\");\n}\n\nvoid loop() {\n  int value = analogRead(vol_pin);\n  Serial.println(value);\n  delay(10);\n}\n</code></pre>"},{"location":"02_Arduino_Basic/06_Volume/#2","title":"\ucf54\ub4dc 2. \ubcfc\ub968\uac12\uc744 \uc2dc\ub9ac\uc5bc \uadf8\ub798\ud504\ub85c \ubcf4\uae30","text":"volumeGraph.ino<pre><code>const int vol_pin = A0;\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println(\"===== Program Start =====\");\n}\n\nvoid loop() {\n  int value = analogRead(vol_pin);\n\n  Serial.print(\"0, 1023, \");\n  Serial.print(value);\n  Serial.print(\", \");\n  Serial.println(led_value);\n\n  delay(10);\n}\n</code></pre>"},{"location":"02_Arduino_Basic/06_Volume/#3-led","title":"\ucf54\ub4dc 3. \ubcfc\ub968\uac12\uc744 \uc2dc\ub9ac\uc5bc \ubaa8\ub2c8\ud130\ub85c \ubcf4\uba74\uc11c LED \ubc1d\uae30 \uc870\uc808","text":"volumeLed.ino<pre><code>const int vol_pin = A0;\nconst int led_pin = 13;\n\nvoid setup() {\n  pinMode(led_pin, OUTPUT);\n  Serial.begin(115200);\n  Serial.println(\"===== Program Start =====\");\n}\n\nvoid loop() {\n  int value = analogRead(vol_pin);\n  int led_value = value / 4;\n\n  analogWrite(led_pin, led_value);\n\n  Serial.print(\"0, 1023, \");\n  Serial.print(value);\n  Serial.print(\", \");\n  Serial.println(led_value);\n\n  delay(10);\n}\n</code></pre>"},{"location":"02_Arduino_Basic/06_Volume/#4","title":"\ucf54\ub4dc 4. \ubcfc\ub968\uac12\uc744 \uc2dc\ub9ac\uc5bc \ubaa8\ub2c8\ud130\ub85c \ubcf4\uba74\uc11c \uc11c\ubcf4\ubaa8\ud130 \uc81c\uc5b4","text":"volumeServo.ino<pre><code>#include &lt;Servo.h&gt;\n\nconst int vol_pin = A0;\nconst int servo_pin = 9;\n\nServo sv;\n\nvoid setup() {\n  sv.attach(servo_pin, 544, 2400);\n\n  Serial.begin(115200);\n  Serial.println(\"===== Program Start =====\");\n}\n\nvoid loop() {\n  int value = analogRead(vol_pin);\n  int sv_value = map(value, 0, 1023, 0, 180);\n\n  sv.write(sv_value);\n\n  Serial.print(\"0, 1023, \");\n  Serial.print(value);\n  Serial.print(\", \");\n  Serial.println(sv_value);\n\n  delay(10);\n}\n</code></pre>"},{"location":"02_Arduino_Basic/09_Programming_Basic/","title":"9. Programming Basic","text":""},{"location":"02_Arduino_Basic/09_Programming_Basic/#_1","title":"\uce58\ud658\ubb38","text":""},{"location":"02_Arduino_Basic/09_Programming_Basic/#_2","title":"\uc120\uc5b8\ubb38","text":""},{"location":"02_Arduino_Basic/09_Programming_Basic/#_3","title":"\uc8fc\uc11d (\uc124\uba85)","text":""},{"location":"02_Arduino_Basic/09_Programming_Basic/#if","title":"if","text":""},{"location":"02_Arduino_Basic/09_Programming_Basic/#for","title":"for","text":""},{"location":"02_Arduino_Basic/09_Programming_Basic/#while","title":"while","text":""},{"location":"02_Arduino_Basic/09_Programming_Basic/#switch","title":"switch","text":""},{"location":"03_Processing_Ext/10-1_FOR-LOOP/","title":"10-1. FOR-LOOP","text":"<p>\ubc18\ubcf5\ub418\ub294 \uac83\uc744 \uac04\ub2e8\ud558\uac8c \ud45c\ud604\ud558\uae30 \uc704\ud574 <code>FOR-LOOP</code>\ub97c \uc0ac\uc6a9\ud55c\ub2e4.</p> <ul> <li>FOR-Loop\ub294 \ubc18\ubcf5\ud558\ub294 \ud69f\uc218\uac00 \uc815\ud574\uc838 \uc788\uac70\ub098, \ubc18\ubcf5\ud558\ub294 \uc870\uac74\uc774 \ubd84\uba85\ud560 \ub54c \uc0ac\uc6a9\ud55c\ub2e4.</li> <li>\ubc18\ubcf5\ud558\ub294 \ub3d9\uc548 \uc21c\ucc28\uc801\uc778 \ubcc0\ud654\uac00 \uc788\ub294 \uc870\uac74\uc77c \ub54c \uc0ac\uc6a9\ud558\uae30 \uc88b\ub2e4.</li> <li>\uc608) 10\ubc88 \ubc18\ubcf5\ud558\uae30, \uc6d0\uc744 5\uac1c \uadf8\ub9ac\uae30</li> </ul> <p>FOR-LOOP</p> <pre><code>for ( \uc2dc\uc791 \uc870\uac74 ;  \ubc18\ubcf5 \uc870\uac74 ;  \ubc18\ubcf5\ud560 \ub54c \uc2e4\ud589\ud560 \uba85\ub839\uc5b4) {\n    // \ubc18\ubcf5\ud560 \ub0b4\uc6a9\n}\n\nfor (int i = 0;  i &lt; 10;  i++) {\n    // \uc2dc\uc791 \uc870\uac74 : int i = 0;     // \uc815\uc218\ud615 \ubcc0\uc218 i \ub97c \uc0ac\uc6a9\ud55c\ub2e4. \ucd08\uae30\uac12\uc740 0\n    // \ubc18\ubcf5 \uc870\uac74 : i &lt; 10;        // \ubcc0\uc218 i \uac12\uc774 10\ubcf4\ub2e4 \uc791\uc73c\uba74 \ubc18\ubcf5, \uac19\uac70\ub098 \ud06c\uba74 FOR-LOOP \ubc97\uc5b4\ub0a8\n    // \ubc18\ubcf5\uc2dc \uc2e4\ud589\ud560 \uba85\ub839 : i++;    // \ubcc0\uc218 i \uac12\uc744 \ubc18\ubcf5\ud560 \ub54c \ub9c8\ub2e4 1 \uc99d\uac00\ud568\n}\n</code></pre> proc-010-1.pde<pre><code>for(int i = 0; i &lt; 10; i++) {\n    println(i);\n}\n</code></pre> <p></p> <ul> <li>\uc815\uc218\ud615 \ubcc0\uc218 i \uac00 0 \uc73c\ub85c \uc2dc\uc791\ud574\uc11c 10 \ubcf4\ub2e4 \uc791\uc740 \ub3d9\uc548 \ubc18\ubcf5\ud55c\ub2e4.</li> <li>\ubc18\ubcf5\ud560 \ub54c \ub9c8\ub2e4 i \ub97c 1 \uc529 \uc99d\uac00 \uc2dc\ud0a8\ub2e4.</li> <li>\ubc18\ubcf5\ud560 \ub54c \ub9c8\ub2e4 i \uac12\uc744 print \ud55c\ub2e4.</li> </ul>"},{"location":"03_Processing_Ext/10_Class_ArrayH/","title":"10. Class Array 1 (\uac00\ub85c)","text":"<p>\ud074\ub77c\uc2a4\ub97c \uc0ac\uc6a9\ud574 \uc6d0\uc744 \uac00\ub85c\ub85c 6\uac1c \ub9cc\ub4e0\ub2e4.</p> <p></p>"},{"location":"03_Processing_Ext/10_Class_ArrayH/#_1","title":"\ucf54\ub4dc \ubcf4\uae30","text":"\uba54\uc778 \ucf54\ub4dcClass \ucf54\ub4dc proc-010.pde<pre><code>int xCnt = 6;       // \uac00\ub85c \ubc29\ud5a5 \uac2f\uc218\nint diam = 100;     // \uc6d0\uc758 \uc9c0\ub984\n\n// CircleArrow \ud074\ub77c\uc2a4\uc758 \uac1d\uccb4\ub97c \uc5ec\ub7ec\uac1c \ubcf4\uad00\ud560 \ubcc0\uc218 \ubc30\uc5f4\nCircleArrow[] ca = new CircleArrow[xCnt];   \n\u200b\nvoid setup() {\n    size(640, 480);\n\n    // \uac00\ub85c\ucd95 \ud06c\uae30\ub97c \uc6d0\uc758 \uac2f\uc218\ub85c \ub098\ub214\n    float xDist = width / xCnt;\n    // \uac00\ub85c \uccab\ubc88\uc9f8 \uc6d0\uacfc \ub9c8\uc9c0\ub9c9 \uc6d0 \uc0ac\uc774 \uac70\ub9ac\n    float xLen = xDist * (xCnt -1);\n    // \uccab\ubc88\uc9f8 \uc6d0\uc758 \uac00\ub85c \uc704\uce58   \n    float xStart = (width / 2) - (xLen / 2);\n\n    // \uac1d\uccb4\ub97c \uc0dd\uc131\ud55c\ub2e4.\n    for(int i=0; i &lt; xCnt; i++) {\n        // \uac00\ub85c\ucd95 \uc2dc\uc791\uc810(xStart)\uc73c\ub85c \ubd80\ud130 xDist \uac04\uaca9\uc73c\ub85c \ubc30\uce58\ud558\uc5ec, \uc138\ub85c\ucd95\uc758 \uc911\uac04\uc5d0,\n        // diam \ud06c\uae30\uc758 \uc6d0\uc744 \uc124\uc815\ud55c\ub2e4.\n        ca[i] = new CircleArrow(xStart + (i * xDist), height / 2, diam);\n    }\n}\n\u200b\nvoid draw() {\n    background(255);\n\u200b\n    for(int i=0; i &lt; xCnt; i++) {\n        ca[i].show(mouseX, mouseY);\n    }\n\u200b\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> CircleArrow.pde<pre><code>class CircleArrow {\n    float x;     // \uc6d0\uc758 x \uc88c\ud45c\n    float y;     // \uc6d0\uc758 y \uc88c\ud45c\n    float r;     // \uc6d0\uc758 \ubc18\uc9c0\ub984\n    float tx;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 x \uc88c\ud45c, target x\n    float ty;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 y \uc88c\ud45c, target y\n    float ta;    // \uc6d0\uc758 \uc6d0\uc810\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uac01\ub3c4, target angle\n\n    // \ud074\ub77c\uc2a4 \ubcc0\uc218\ub97c \uc0dd\uc131\ud558\uace0 \ucd08\uae30\ud654 \ud55c\ub2e4.\n    CircleArrow(float posX, float posY, float diameter) {\n        x = posX;\n        y = posY;\n        r = diameter / 2;\n        tx = 0;\n        ty = 0;\n        ta = 0;\n    }\n\n    void show(float targetX, float targetY) {\n        ta = atan2(targetY - y, targetX - x);\n        tx = x + cos(ta) * r;\n        ty = y + sin(ta) * r;\n        circle(x, y, r * 2);\n        line(x, y, tx, ty);\n    }\n}\n</code></pre> <ul> <li>\uba54\uc778\ucf54\ub4dc Line 9 \uc5d0\uc11c \uac1d\uccb4\ub97c \ubc30\uc5f4\ub85c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \uac1d\uccb4 \ubc30\uc5f4\uc744 \uc9c0\uc815\ud55c\ub2e4.</li> <li>\uba54\uc778\ucf54\ub4dc Line 14-26 \uc5d0\uc11c \uac1d\uccb4 \ubc30\uc5f4\uc744 \ucd08\uae30\ud654 \ud55c\ub2e4.</li> <li><code>draw()</code> \ubd80\ubd84\uc740 \ub9e4\uc6b0 \uc2ec\ud50c\ud558\ub2e4.</li> </ul>"},{"location":"03_Processing_Ext/11_Class_ArrayV/","title":"11. Class Array 2 (\uc138\ub85c)","text":"<p>\ud074\ub77c\uc2a4\ub97c \uc0ac\uc6a9\ud574 \uc6d0\uc744 \uc138\ub85c\ub85c 4\uac1c \ub9cc\ub4e0\ub2e4.</p> <p></p> \uba54\uc778 \ucf54\ub4dcClass \ucf54\ub4dc proc-011.pde<pre><code>int yCnt = 4;       // \uc138\ub85c \ubc29\ud5a5 \uac2f\uc218\nint diam = 100;     // \uc6d0\uc758 \uc9c0\ub984\n\n// CircleArrow \ud074\ub77c\uc2a4\uc758 \uac1d\uccb4\ub97c \uc5ec\ub7ec\uac1c \ubcf4\uad00\ud560 \ubcc0\uc218 \ubc30\uc5f4\nCircleArrow[] ca = new CircleArrow[yCnt];   \n\u200b\nvoid setup() {\n    size(640, 480);\n\n    // \uc138\ub85c\ucd95 \ud06c\uae30\ub97c \uc6d0\uc758 \uac2f\uc218\ub85c \ub098\ub214\n    float yDist = height / yCnt;\n    // \uc138\ub85c \uccab\ubc88\uc9f8 \uc6d0\uacfc \ub9c8\uc9c0\ub9c9 \uc6d0 \uc0ac\uc774 \uac70\ub9ac\n    float yLen = yDist * (yCnt -1);\n    // \uccab\ubc88\uc9f8 \uc6d0\uc758 \uc138\ub85c \uc704\uce58   \n    float yStart = (height / 2) - (yLen / 2);\n\n    // \uac1d\uccb4\ub97c \uc0dd\uc131\ud55c\ub2e4.\n    for(int j=0; j &lt; yCnt; j++) {\n        // \uac00\ub85c\ucd95\uc758 \uc911\uac04\uc5d0, \uc138\ub85c\ucd95 \uc2dc\uc791\uc810(yStart)\uc73c\ub85c \ubd80\ud130 yDist \uac04\uaca9\uc73c\ub85c \ubc30\uce58\ud558\uc5ec\n        // diam \ud06c\uae30\uc758 \uc6d0\uc744 \uc124\uc815\ud55c\ub2e4.\n        ca[j] = new CircleArrow(width/2, yStart + (j * yDist), diam);\n    }\n}\n\u200b\nvoid draw() {\n    background(255);\n\u200b\n    for(int j=0; j &lt; yCnt; j++) {\n        ca[j].show(mouseX, mouseY);\n    }\n\u200b\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> CircleArrow.pde<pre><code>class CircleArrow {\n    float x;     // \uc6d0\uc758 x \uc88c\ud45c\n    float y;     // \uc6d0\uc758 y \uc88c\ud45c\n    float r;     // \uc6d0\uc758 \ubc18\uc9c0\ub984\n    float tx;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 x \uc88c\ud45c, target x\n    float ty;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 y \uc88c\ud45c, target y\n    float ta;    // \uc6d0\uc758 \uc6d0\uc810\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uac01\ub3c4, target angle\n\n    CircleArrow(float posX, float posY, float diameter) {\n        x = posX;\n        y = posY;\n        r = diameter / 2;\n        tx = 0;\n        ty = 0;\n        ta = 0;\n    }\n\n    void show(float targetX, float targetY) {\n        ta = atan2(targetY - y, targetX - x);\n        tx = x + cos(ta) * r;\n        ty = y + sin(ta) * r;\n        circle(x, y, r * 2);\n        line(x, y, tx, ty);\n    }\n}\n</code></pre> <ul> <li>\uba54\uc778\ucf54\ub4dc Line 9 \uc5d0\uc11c \uac1d\uccb4\ub97c \ubc30\uc5f4\ub85c \uc800\uc7a5\ud558\uae30 \uc704\ud574 \uac1d\uccb4 \ubc30\uc5f4\uc744 \uc9c0\uc815\ud55c\ub2e4.</li> <li>\uba54\uc778\ucf54\ub4dc Line 14-26 \uc5d0\uc11c \uac1d\uccb4 \ubc30\uc5f4\uc744 \ucd08\uae30\ud654 \ud55c\ub2e4.</li> <li><code>draw()</code> \ubd80\ubd84\uc740 \ub9e4\uc6b0 \uc2ec\ud50c\ud558\ub2e4.</li> </ul>"},{"location":"03_Processing_Ext/12_Class_ArrayHV/","title":"12. Class Array 3 (\uac00\ub85cx\uc138\ub85c)","text":"<p>\ud074\ub77c\uc2a4\ub97c \uc0ac\uc6a9\ud574 \uc6d0\uc744 \uac00\ub85c 6\uac1c, \uc138\ub85c 4\uac1c \ub9cc\ub4e0\ub2e4.</p> <p></p> \uba54\uc778 \ucf54\ub4dcClass \ucf54\ub4dc proc-012.pde<pre><code>//\n// \ubc30\uc5f4\uc744 \uc0ac\uc6a9\ud574 \uac1d\uccb4\ub97c \uc5ec\ub7ec\uac1c \ub9cc\ub4e0\ub2e4\n//\n\nint xCnt = 6;       // \uac00\ub85c \ubc29\ud5a5 \uac2f\uc218\nint yCnt = 4;       // \uc138\ub85c \ubc29\ud5a5 \uac2f\uc218\nint tCnt = xCnt * yCnt;\nint diam = 100;     // \uc6d0\uc758 \uc9c0\ub984\n\n// CircleArrow \ud074\ub77c\uc2a4\uc758 \uac1d\uccb4\ub97c \uc5ec\ub7ec\uac1c \ubcf4\uad00\ud560 \ubcc0\uc218 \ubc30\uc5f4\nCircleArrow[] ca = new CircleArrow[tCnt];\n\u200b\nvoid setup() {\n    size(640, 480);\n\n    float xDist = width / xCnt;\n    float xLen = xDist * (xCnt -1);\n    float xStart = (width / 2) - (xLen / 2);\n\n    float yDist = height / yCnt;\n    float yLen = yDist * (yCnt -1);\n    float yStart = (height / 2) - (yLen / 2);\n\n    for(int i=0; i &lt; xCnt; i++) {\n        for(int j=0; j &lt; yCnt; j++) {\n            int idx = (xCnt * j) + i;\n            ca[idx] = new CircleArrow(xStart + (i * xDist), yStart + (j * yDist), diam);\n        }\n    }\n}\n\u200b\nvoid draw() {\n    background(255);\n\u200b\n    for(int i=0; i &lt; tCnt; i++) {\n        ca[i].show(mouseX, mouseY);\n    }\n\u200b\n    line(0, mouseY, width, mouseY);\n    line(mouseX, 0, mouseX, height);\n}\n</code></pre> CircleArrow.pde<pre><code>//\n// \ub9cc\ub4e4\uc5b4 \ub454 Class\ub97c \uadf8\ub300\ub85c \uc4f4\ub2e4\n//\nclass CircleArrow {\n    float x;     // \uc6d0\uc758 x \uc88c\ud45c\n    float y;     // \uc6d0\uc758 y \uc88c\ud45c\n    float r;     // \uc6d0\uc758 \ubc18\uc9c0\ub984\n    float tx;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 x \uc88c\ud45c, target x\n    float ty;    // \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uc6d0 \uc704\uc758 \uc810 y \uc88c\ud45c, target y\n    float ta;    // \uc6d0\uc758 \uc6d0\uc810\uc5d0\uc11c \ub9c8\uc6b0\uc2a4 \ubc29\ud5a5 \uac01\ub3c4, target angle\n\n    // \ud074\ub77c\uc2a4 \ubcc0\uc218\ub97c \uc0dd\uc131\ud558\uace0 \ucd08\uae30\ud654 \ud55c\ub2e4.\n    CircleArrow(float posX, float posY, float diameter) {\n        x = posX;\n        y = posY;\n        r = diameter / 2;\n        tx = 0;\n        ty = 0;\n        ta = 0;\n    }\n\n    // \ubaa9\ud45c \uc9c0\uc810\uc73c\ub85c \ubc29\ud5a5\uc744 \ucc3e\uace0, \uc6d0\uacfc \ub9cc\ub098\ub294 \uc88c\ud45c\ub97c \uacc4\uc0b0\ud574 \uc800\uc7a5\ud55c\ub2e4.\n    void show(float targetX, float targetY) {\n        ta = atan2(targetY - y, targetX - x);\n        tx = x + cos(ta) * r;\n        ty = y + sin(ta) * r;\n        circle(x, y, r * 2);\n        line(x, y, tx, ty);\n    }\n}\n</code></pre> <ul> <li>\uba54\uc778\ucf54\ub4dc Line 16-29 \uc5d0\uc11c \uc6d0\uc758 \uc704\uce58\ub97c \ubc30\uc815\ud55c\ub2e4.</li> <li>FOR-LOOP\ub97c 2\uc911\uc73c\ub85c \uad6c\uc131\ud588\ub2e4.</li> <li><code>draw()</code> \ubd80\ubd84\uc740 \ud06c\uac8c \ubc14\ub00c\uc9c0 \uc54a\uc558\ub2e4.</li> </ul>"},{"location":"03_Processing_Ext/20_Vector/","title":"20. Vector \uc0ac\uc6a9\ud558\uae30","text":"<ul> <li>\ud074\ub77c\uc2a4\ub85c 2\uac1c \uc6d0 \uadf8\ub9ac\uae30 \ucf54\ub4dc\uc5d0\uc11c, Class \ubd80\ubd84\ub9cc Vector \ubc29\uc2dd\uc73c\ub85c \ubc14\uafe8\ub2e4.</li> <li>\ubca1\ud130 \ubc29\uc2dd\uc740 \uc6d0\uc744 \uc774\ub3d9\ud558\uac70\ub098 \uc911\ub825/\ub9c8\ucc30/\ucda9\ub3cc \ub4f1\uc758 \ubcc0\ud654\ub97c \ud45c\ud604\ud558\uae30\uc5d0 \uc801\ud569\ud558\ub2e4.</li> <li>\uc5ec\uae30\uc11c\ub294 \uae30\uc874 \ubc29\uc2dd\uc744 \uadf8\ub300\ub85c \ub450\uace0 Class\ub9cc \uc218\uc815\ud574\uc11c \ub3d9\uc791\ud558\ub294 \uac83\uc5d0 \uc8fc\ubaa9\ud55c\ub2e4.</li> <li>\ud074\ub77c\uc2a4 \ucf54\ub4dc\ub9cc \ubc14\uafe8\uae30 \ub568\ubb38\uc560 \ud074\ub77c\uc2a4\ub97c \uc774\uc6a9\ud558\ub294 \ub2e4\ub978 \ud504\ub85c\uadf8\ub7a8\uc5d0\uc11c\ub3c4 \uc0ac\uc6a9 \uac00\ub2a5\ud558\ub2e4.</li> </ul>"},{"location":"03_Processing_Ext/20_Vector/#2","title":"\ubca1\ud130\ub97c \uc0ac\uc6a9\ud55c \uc6d0 \uadf8\ub9bc 2\uac1c","text":"proc-020.pde<pre><code>ClockArrow ca1, ca2;\n\nvoid setup() {\n    size(640, 480);\n\n    ca1 = new ClockArrow(width/2 -100, height/2, 150);\n    ca2 = new ClockArrow(width/2 +100, height/2, 150);\n}\n\nvoid draw() {\n    background(255);\n\n    ca1.show(mouseX, mouseY);\n    ca2.show(mouseX, mouseY);\n\n    line(mouseX, 0, mouseX, height);\n    line(0, mouseY, width, mouseY);\n}\n\nclass ClockArrow {\n    PVector vLoc;\n    float r;\n    float tx;\n    float ty;\n\n    ClockArrow(float posX, float posY, float dia) {\n        r = dia/2;\n        vLoc = new PVector(posX, posY);\n    }\n\n    void show(float x, float y) {\n        PVector vTarget = new PVector(x, y);\n        PVector vDir = PVector.sub(vTarget, vLoc);\n\n        vDir.normalize();\n        vDir.mult(r);\n        tx = vDir.x;\n        ty = vDir.y;\n\n        circle(vLoc.x, vLoc.y, r*2);\n        line(vLoc.x, vLoc.y, vLoc.x +tx, vLoc.y +ty);\n    }\n}\n</code></pre>"},{"location":"03_Processing_Ext/20_Vector/#_1","title":"\ucd94\uac00 \ucf54\ub4dc (\uc544\uc774\ub514\uc5b4)","text":"CircleArrow.pde<pre><code>void update() {\n    PVector vTarget = new PVector(mouseX, mouseY);\n    PVector vDir = PVector.sub(vTarget, vLoc);\n    vDir.normalize();\n    vDir.mult(r);\n    tx = vDir.x;\n    ty = vDir.y;\n    heading = vDir.heading();\n}\n\nvoid trace() {\n    PVector vTarget = new PVector(mouseX, mouseY);\n    PVector vDir = PVector.sub(vTarget, vLoc);\n    if(vDir.mag() &gt; r) {\n        vDir.normalize();\n        vDir.mult(1.23);\n        vLoc.add(vDir);\n    }\n    vDir.normalize();\n    vDir.mult(r);\n    tx = vDir.x;\n    ty = vDir.y;\n}\n\nvoid show() {\n    circle(vLoc.x, vLoc.y, r*2);\n    line(vLoc.x, vLoc.y, vLoc.x +tx, vLoc.y +ty);\n}\n</code></pre>"},{"location":"03_Processing_Ext/30_OSC/","title":"30. OSC","text":"<p>OSC</p> <p>OSC : Open Sound Control</p> <p>OSC\ub294 \ub124\ud2b8\uc6cc\ud06c\ub85c \uc5f0\uacb0\ub41c \uc7a5\ube44\ub4e4\uc744 \ucee8\ud2b8\ub864\ud558\ub294 \ud504\ub85c\ud1a0\ucf5c\uc774\ub2e4.</p> <ul> <li>\uc774\ub354\ub137(ethernet) \ub610\ub294 \uc640\uc774\ud30c\uc774(wifi)\ub85c \uc5f0\uacb0\ub41c \ub124\ud2b8\uc6cc\ud06c\ub97c \uc0ac\uc6a9\ud574 \uc7a5\ube44\ub4e4 \uac04\uc5d0 \ucee8\ud2b8\ub864 \uc2e0\ud638\ub97c \ubcf4\ub0b4\uace0 \ubc1b\ub294\ub2e4.</li> <li>UDP \ub610\ub294 TCP \ud504\ub85c\ud1a0\ucf5c\uc744 \uc0ac\uc6a9\ud55c\ub2e4.</li> <li>\ub124\ud2b8\uc6cc\ud06c\uc5d0 \uc5f0\uacb0\ub41c \uc7a5\ube44\uc758 IP \uc8fc\uc18c\uc640 \uc2e0\ud638\ub97c \uc8fc\uace0 \ubc1b\uc744 Port \ubc88\ud638\uac00 \ud544\uc694\ud558\ub2e4.</li> <li>\ucee8\ud2b8\ub864 \uc2e0\ud638\ub294 \ubbf8\ub9ac \uc815\ud574\uc838\uc788\uc9c0 \uc54a\ub2e4. \uac01 \uc7a5\ube44\ub4e4\uc774 \ud3b8\ud55c\ub300\ub85c \ub9cc\ub4e4\uc5b4 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.</li> <li>\ucee8\ud2b8\ub864 \uc2e0\ud638\ub294 OSC \ubb38\ubc95\uc5d0 \ub9de\uac8c \uad6c\uc131\ub418\uc5b4\uc57c \ud55c\ub2e4.</li> </ul> <p>OSC \uc2a4\ud399\uc774 \ub354 \uad81\uae08\ud558\ub2e4\uba74... \ud648\ud398\uc774\uc9c0 \uc774\ub3d9</p>"},{"location":"03_Processing_Ext/31_OSC_send/","title":"31. OSC Send","text":"<p>\ud504\ub85c\uc138\uc2f1\uc5d0\uc11c OSC \ub370\uc774\ud130 \uc4f0\uae30</p> <p></p> proc-031.pde<pre><code>import oscP5.*;\nimport netP5.*;\n\nOscP5 osc;\nNetAddress dest;\n\nint portNo = 9001;\nint portDest = 12000;\nString ipDest = \"localhost\";\nString oscAddr = \"/ca/pos\";\n\nvoid setup() {\n    size(640, 480);\n    osc = new OscP5(this, portNo);\n    dest = new NetAddress(ipDest, portDest);\n}\n\nvoid draw() {\n    background(255);\n    line(mouseX, 0, mouseX, height);\n    line(0, mouseY, width, mouseY);\n    oscMouseSend();\n}\n\nvoid oscMouseSend() {\n    OscMessage msg = new OscMessage(oscAddr);\n    msg.add((float) mouseX / width);\n    msg.add((float) mouseY / height);\n    osc.send(msg, dest);\n}\n</code></pre>"},{"location":"03_Processing_Ext/32_OSC_recv/","title":"32. OSC Receive","text":"<p>\ud504\ub85c\uc138\uc2f1\uc5d0\uc11c OSC \ub370\uc774\ud130 \uc77d\uae30</p> <p></p> proc-032.pde<pre><code>import oscP5.*;\nimport netP5.*;\n\nOscP5 osc;\n\nint portNo = 12000;\nString oscAddr = \"/ca/pos\";\nfloat posX, posY;\n\nvoid setup() {\n    size(640, 480);\n    posX = width / 2;\n    posY = height  / 2;\n    osc = new OscP5(this, portNo);\n}\n\nvoid draw() {\n    background(255);\n    circle(posX, posY, 150);\n}\n\nvoid oscEvent(OscMessage oscMsg) {\n    if(oscMsg.checkAddrPattern(oscAddr) == true) {\n        if(oscMsg.checkTypetag(\"ff\")) {\n            float x, y;\n            x = oscMsg.get(0).floatValue();\n            y = oscMsg.get(1).floatValue();\n            posX = width * x;\n            posY = height * y;\n        } else {\n            oscMsg.print();\n        }\n    }\n}\n</code></pre>"},{"location":"03_Processing_Ext/40_MIDI/","title":"40. MIDI (\uc608\uc815)","text":"<p>MIDI\ub294 \uc545\uae30\ub97c \ucee8\ud2b8\ub864\ud558\ub294 \uc2e0\ud638\ub2e4.</p>"},{"location":"03_Processing_Ext/50_ArtNet/","title":"50. ArtNet \ub2e4\ub8e8\uae30 (\uc608\uc815)","text":"<p>ArtNet\uc740 \uc870\uba85 \uc7a5\ube44\uc5d0 \uc2e0\ud638\ub97c \uc804\uc1a1\ud558\ub294 \ud504\ub85c\ud1a0\ucf5c\uc774\ub2e4.</p>"},{"location":"03_Processing_Ext/60_DataViewClass/","title":"60. Data View Class","text":"<ul> <li>Data View Class \uc0ac\uc6a9\ud558\uae30</li> </ul> sensor_graph_mouse.pde<pre><code>SensorGraphMatrix sgm;\n\nvoid setup() {\n    size(1000, 300);\n    // sgm Class \uc0ac\uc6a9 (\"\uc774\ub984\", x\ucd95 \uc704\uce58, y\ucd95 \uc704\uce58, \uac00\ub85c \ud06c\uae30, \uc138\ub85c\ud06c\uae30, \ub370\uc774\ud130 \uac2f\uc218)\n    sgm = new SensorGraphMatrix(\"Mouse XYZ 20ms\", 60, 80, 852, 152, 2);\n    // \ub370\uc774\ud130 \uc218\uc9d1 \uac04\uaca9 ms\n    sgm.setInterval(20);\n    // \ub370\uc774\ud130 \uc21c\uc11c, \ucd5c\ub300\uac12, \uadf8\ub798\ud504 \uc0c9\uae54\n    sgm.setDataMaxNColor(0, width, color(255, 0, 0));\n    sgm.setDataMaxNColor(1, height, color(0, 0, 255));\n}\n\nvoid draw() {\n    background(255);\n\n    if(sgm.isUpdate()) {\n        sgm.add(0, mouseX);\n        sgm.add(1, mouseY);\n    }\n    sgm.draw();\n}\n\nvoid mousePressed() {\n    if(sgm.isClick()) sgm.toggle();\n}\n</code></pre> sensor_graph_sine.pde<pre><code>SensorGraphMatrix sgm;\n\nint cntDegree = 0;\n\nvoid setup() {\n    size(1000, 300);\n    sgm = new SensorGraphMatrix(\"Mouse XY &amp; Sine\", 60, 80, 852, 152, 3);\n    sgm.setInterval(20);\n    sgm.setDataMaxNColor(0, width, color(255, 0, 0));\n    sgm.setDataMaxNColor(1, height, color(0, 0, 255));\n    sgm.setDataMaxNColor(2, 360, color(0, 255, 0));\n}\n\nvoid draw() {\n    background(255);\n\n    if(sgm.isUpdate()) {\n        sgm.add(0, mouseX);\n        sgm.add(1, mouseY);\n        sgm.add(2, 180 + sin(radians(cntDegree)) * 178);\n        cntDegree++;\n        if(cntDegree &gt; 360) cntDegree = 0;\n    }\n    sgm.draw();\n}\n\nvoid mousePressed() {\n    if(sgm.isClick()) sgm.toggle();\n}\n</code></pre> serialGraphMatrix.pde<pre><code>class SensorGraphMatrix {\n    String name_tag;\n\n    int posX;\n    int posY;\n    int boxW;\n    int boxH;\n\n    int cnt_data_set;\n    int cnt_data;\n    int g_height;\n\n    float data[][];\n    float dataMax[];\n    color graphColor[];\n\n    Boolean chk_update = true;\n    long t_now;\n    long t_pre[];\n    int  t_int;\n\n    float lv_trigger;\n    float lv_squalch;\n    Boolean trigger[];\n\n    SensorGraphMatrix(int x, int y, int w, int h) {\n        name_tag = \"Sensor Graph\";  // Default Graph Name\n        cnt_data_set = 10;          // Default Data Count : 10\n        t_int = 10;                 // Default Data Refresh : 10ms\n        lv_trigger = 0.75;          // Default Trigger Point\n        lv_squalch = 0.25;          // Default Squalch Point\n\n        posX = x;\n        posY = y;\n        boxW = w;\n        boxH = h;\n\n        cnt_data = w -2;\n        g_height = h -2;\n\n        data = new float[cnt_data_set][cnt_data];\n        dataMax = new float[cnt_data_set];\n        graphColor = new color[cnt_data_set];\n        trigger = new Boolean[cnt_data_set];\n\n        t_now = 0;\n        t_pre = new long[cnt_data_set];\n        for(int i=0; i &lt; cnt_data_set; i++) {\n            t_pre[i] = 0;\n            trigger[i] = false;\n        }\n    }\n\n    SensorGraphMatrix(int x, int y, int w, int h, int data_set_count) {\n        name_tag = \"Sensor Graph\";  // Default Graph Name\n        t_int = 10;                 // Default Data Refresh : 10ms\n        cnt_data_set = data_set_count;\n        lv_trigger = 0.75;          // Default Trigger Point\n        lv_squalch = 0.25;          // Default Squalch Point\n\n        posX = x;\n        posY = y;\n        boxW = w;\n        boxH = h;\n\n        cnt_data = w -2;\n        g_height = h -2;\n\n        data = new float[cnt_data_set][cnt_data];\n        dataMax = new float[cnt_data_set];\n        graphColor = new color[cnt_data_set];\n        trigger = new Boolean[cnt_data_set];\n\n        t_now = 0;\n        t_pre = new long[cnt_data_set];\n        for(int i=0; i &lt; cnt_data_set; i++) {\n            t_pre[i] = 0;\n            trigger[i] = false;\n        }\n    }\n\n    SensorGraphMatrix(String tag, int x, int y, int w, int h,\n                                int data_set, int time_interval) {\n        posX = x;\n        posY = y;\n        boxW = w;\n        boxH = h;\n\n        name_tag = tag;\n\n        cnt_data_set = data_set;\n        cnt_data = w -2;\n        g_height = h -2;\n\n        data = new float[cnt_data_set][cnt_data];\n        dataMax = new float[cnt_data_set];\n        graphColor = new color[cnt_data_set];\n        trigger = new Boolean[cnt_data_set];\n\n        t_now = 0;\n        t_pre = new long[cnt_data_set];\n        for(int i=0; i &lt; cnt_data_set; i++) {\n            t_pre[i] = 0;\n            trigger[i] = false;\n        }\n        t_int = time_interval;\n\n        lv_trigger = 0.75;          // Default Trigger Point\n        lv_squalch = 0.25;          // Default Squalch Point\n    }\n\n    void setDataMaxNColor(int no, float max, color lineColor) {\n        dataMax[no] = max;\n        graphColor[no] = lineColor;\n    }\n\n    void setTitle(String title) {\n        name_tag = trim(title);\n    }\n\n    void setInterval(int time_interval) {\n        t_int = time_interval;\n        if(t_int &lt; 2) t_int = 2;\n    }\n\n    void setTrigger(float val) {\n        lv_trigger = val;\n    }\n\n    void setSqualch(float val) {\n        lv_squalch = val;\n    }\n\n    void draw() {\n        color boxBorder = color(0);\n        color boxCenterLine = color(127, 127, 127);\n        fill(boxBorder);\n        text(name_tag, posX, posY -10);\n        noFill();\n        stroke(boxBorder);\n        rect(posX, posY, boxW, boxH);\n        stroke(boxCenterLine);\n        line(posX, posY + boxH /2, posX +boxW, posY + boxH /2);\n        // Time Line\n        float t_total = cnt_data * t_int;\n        for(int i=0; i &lt;= 10; i++) {\n            line(   posX + (i * boxW / 10),  posY +boxH,\n                    posX + (i * boxW / 10), posY +boxH +10);\n            fill(boxCenterLine);\n            text(   nf(t_total - (i * t_total/10), 0, 0),\n                    posX + (i * boxW / 10) -5,  posY +boxH +24);\n            noFill();\n        }\n\n        for(int j=0; j &lt; cnt_data_set; j++) {\n            stroke(graphColor[j]);\n            for(int i=0; i &lt; cnt_data -1; i++) {\n                float x1 = posX +1 +i;\n                float x2 = posX +2 +i;\n                float y1 = posY +boxH -(g_height * (data[j][i]+1) / dataMax[j]);\n                float y2 = posY +boxH -(g_height * (data[j][i+1]+1) / dataMax[j]);\n                line(x1, y1, x2, y2);\n            }\n            fill(graphColor[j]);\n            text(   nf(data[j][cnt_data-1], 0, 3),\n                    posX +boxW +10,\n                    posY +boxH -1 -(g_height * (data[j][cnt_data-1]+1) / dataMax[j]));\n            noFill();\n        }\n        // Trigger &amp; Squalch\n        stroke(boxCenterLine);\n        line(posX, posY +(boxH * lv_trigger), posX +boxW, posY +(boxH * lv_trigger));\n        line(posX, posY +(boxH * lv_squalch), posX +boxW, posY +(boxH * lv_squalch));\n        fill(boxCenterLine);\n        text(\"THRE\", posX -32, posY +boxH -(boxH * lv_trigger) +4);\n        text(\"GATE\", posX -32, posY +boxH -(boxH * lv_squalch) +4);\n        noFill();\n        for(int i=0; i &lt; cnt_data_set; i++) {\n            stroke(graphColor[i]);\n            if(trigger[i] == true) {\n                fill(graphColor[i]);\n                rect(posX + 5 +(30 * i) + (5 * i), posY + 5, 30, 20);\n            }\n        }\n    }\n\n    void add(int no_set, float val) {\n        t_now = millis();\n        if((t_now - t_pre[no_set] &gt; t_int) &amp;&amp; chk_update) {\n            t_pre[no_set] = t_now;\n            for(int i=0; i &lt; cnt_data -1; i++) {\n                data[no_set][i] = data[no_set][i+1];\n            }\n            data[no_set][cnt_data -1] = val;\n            if(val / dataMax[no_set] &gt; lv_trigger) trigger[no_set] = true;\n            else trigger[no_set] = false;\n        }\n    }\n\n    Boolean isClick() {\n        if(     (mouseX &gt; posX &amp;&amp; mouseX &lt; posX + boxW)\n            &amp;&amp;  (mouseY &gt; posY &amp;&amp; mouseY &lt; posY + boxH)) return true;\n        else return false;\n    }\n\n    Boolean isPause() {\n        if(chk_update) return false;\n        else return true;\n    }\n\n    Boolean isUpdate() {\n        if(chk_update) return true;\n        else return false;\n    }\n\n    void setPause() {\n        chk_update = false;\n    }\n\n    void setUpdate() {\n        chk_update = true;\n    }\n\n    void toggle() {\n        if(chk_update) chk_update = false;\n        else chk_update = true;\n    }\n}\n</code></pre>"},{"location":"03_Processing_Ext/61_DataViewSerial/","title":"61. Data View Serial","text":"<p>\uc13c\uc11c\uac12\uc744 \uadf8\ub798\ud504\ub85c \ucd9c\ub825\ud558\uae30</p> <p></p>"},{"location":"03_Processing_Ext/61_DataViewSerial/#_1","title":"\uc544\ub450\uc774\ub178 \ud504\ub85c\uadf8\ub7a8","text":"<ul> <li>\uc13c\uc11c 2\uac1c\ub97c \uc77d\uace0 \uc2dc\ub9ac\uc5bc\ub85c \ucd9c\ub825\ud55c\ub2e4.</li> <li>\uc2a4\uc704\uce58 \uc785\ub825 1\uac1c \ucd94\uac00, \ucd1d 3\uac1c \ub370\uc774\ud130\ub97c \ucd9c\ub825\ud55c\ub2e4.</li> <li>\ub370\uc774\ud130\ub294 \uc27c\ud45c <code>,</code>\ub85c \uad6c\ubd84\ud55c\ub2e4.</li> <li>\ub370\uc774\ud130\uc758 \ub05d\uc740 \uc904\ub118\uae40 <code>\\n</code> \uc774\ub2e4.</li> </ul> sensorRead.ino<pre><code>void setup() {\n    pinMode(LED_BUILTIN, OUTPUT);\n    pinMode(7, INPUT);\n    Serial.begin(115200);\n}\n\nvoid loop() {\n    digitalWrite(LED_BUILTIN, HIGH);\n    int val1 = analogRead(A0);\n    int val2 = analogRead(A1);\n    int val3 = digitalRead(7);\n    if(val3 == HIGH) val3 = 1000;\n    else val3 = 0;\n    digitalWrite(LED_BUILTIN, LOW);\n    Serial.print(val1);\n    Serial.print(\", \");\n    Serial.print(val2);\n    Serial.print(\", \");\n    Serial.println(val3);\n}\n</code></pre>"},{"location":"03_Processing_Ext/61_DataViewSerial/#_2","title":"\ud504\ub85c\uc138\uc2f1 \ud504\ub85c\uadf8\ub7a8","text":"<ul> <li>\uc2dc\ub9ac\uc5bc\ub85c \uc77d\uace0 \ub370\uc774\ud130\ub97c \uadf8\ub798\ud504\ub85c \ud45c\ud604\ud55c\ub2e4.</li> <li>\uadf8\ub798\ud504 \uadf8\ub9ac\ub294 \ud074\ub77c\uc2a4\ub97c \uc0ac\uc6a9\ud55c\ub2e4.</li> </ul> \uba54\uc778 \ucf54\ub4dcClass \ucf54\ub4dc sensor_graph_serial.pde<pre><code>import processing.serial.*;\n\nSerial port;\nSensorGraphMatrix sgm;\n\nint val1, val2, val3;\n\nvoid setup() {\n    size(1000, 300);\n    port = new Serial(this, \"/dev/cu.usbmodem101\", 115200);\n\n    sgm = new SensorGraphMatrix(60, 50, 802, 152, 3);\n    sgm.setInterval(2);\n    sgm.setTitle(\"Volume, Mic, Human Detector\");\n    sgm.setDataMaxNColor(0, 1023, color(255, 0, 0));\n    sgm.setDataMaxNColor(1, 1023, color(0, 0, 255));\n    sgm.setDataMaxNColor(2, 1023, color(0, 255, 255));\n}\n\nvoid draw() {\n    background(255);\n    sgm.draw();\n}\n\nvoid mousePressed() {\n    if(sgm.isClick()) sgm.toggle();\n}\n\nvoid serialEvent(Serial port) {\n    String str = port.readStringUntil('\\n');\n    if(str != null) {\n        String s = trim(str);\n        println(s);\n        String[] new_val = split(s, \", \");\n        if(new_val.length == 3) {\n            val1 = int(trim(new_val[0]));\n            val2 = int(trim(new_val[1]));\n            val3 = int(trim(new_val[2]));\n            if(sgm.isUpdate()) {\n                sgm.add(0, val1);\n                sgm.add(1, val2);\n                sgm.add(2, val3);\n            }\n        }\n    }\n}\n</code></pre> serialGraphMatrix.pde<pre><code>class SensorGraphMatrix {\n    String name_tag;\n\n    int posX;\n    int posY;\n    int boxW;\n    int boxH;\n\n    int cnt_data_set;\n    int cnt_data;\n    int g_height;\n\n    float data[][];\n    float dataMax[];\n    color graphColor[];\n\n    Boolean chk_update = true;\n    long t_now;\n    long t_pre[];\n    int  t_int;\n\n    float lv_trigger;\n    float lv_squalch;\n    Boolean trigger[];\n\n    SensorGraphMatrix(int x, int y, int w, int h) {\n        name_tag = \"Sensor Graph\";  // Default Graph Name\n        cnt_data_set = 10;          // Default Data Count : 10\n        t_int = 10;                 // Default Data Refresh : 10ms\n        lv_trigger = 0.75;          // Default Trigger Point\n        lv_squalch = 0.25;          // Default Squalch Point\n\n        posX = x;\n        posY = y;\n        boxW = w;\n        boxH = h;\n\n        cnt_data = w -2;\n        g_height = h -2;\n\n        data = new float[cnt_data_set][cnt_data];\n        dataMax = new float[cnt_data_set];\n        graphColor = new color[cnt_data_set];\n        trigger = new Boolean[cnt_data_set];\n\n        t_now = 0;\n        t_pre = new long[cnt_data_set];\n        for(int i=0; i &lt; cnt_data_set; i++) {\n            t_pre[i] = 0;\n            trigger[i] = false;\n        }\n    }\n\n    SensorGraphMatrix(int x, int y, int w, int h, int data_set_count) {\n        name_tag = \"Sensor Graph\";  // Default Graph Name\n        t_int = 10;                 // Default Data Refresh : 10ms\n        cnt_data_set = data_set_count;\n        lv_trigger = 0.75;          // Default Trigger Point\n        lv_squalch = 0.25;          // Default Squalch Point\n\n        posX = x;\n        posY = y;\n        boxW = w;\n        boxH = h;\n\n        cnt_data = w -2;\n        g_height = h -2;\n\n        data = new float[cnt_data_set][cnt_data];\n        dataMax = new float[cnt_data_set];\n        graphColor = new color[cnt_data_set];\n        trigger = new Boolean[cnt_data_set];\n\n        t_now = 0;\n        t_pre = new long[cnt_data_set];\n        for(int i=0; i &lt; cnt_data_set; i++) {\n            t_pre[i] = 0;\n            trigger[i] = false;\n        }\n    }\n\n    SensorGraphMatrix(String tag, int x, int y, int w, int h,\n                                int data_set, int time_interval) {\n        posX = x;\n        posY = y;\n        boxW = w;\n        boxH = h;\n\n        name_tag = tag;\n\n        cnt_data_set = data_set;\n        cnt_data = w -2;\n        g_height = h -2;\n\n        data = new float[cnt_data_set][cnt_data];\n        dataMax = new float[cnt_data_set];\n        graphColor = new color[cnt_data_set];\n        trigger = new Boolean[cnt_data_set];\n\n        t_now = 0;\n        t_pre = new long[cnt_data_set];\n        for(int i=0; i &lt; cnt_data_set; i++) {\n            t_pre[i] = 0;\n            trigger[i] = false;\n        }\n        t_int = time_interval;\n\n        lv_trigger = 0.75;          // Default Trigger Point\n        lv_squalch = 0.25;          // Default Squalch Point\n    }\n\n    void setDataMaxNColor(int no, float max, color lineColor) {\n        dataMax[no] = max;\n        graphColor[no] = lineColor;\n    }\n\n    void setTitle(String title) {\n        name_tag = trim(title);\n    }\n\n    void setInterval(int time_interval) {\n        t_int = time_interval;\n        if(t_int &lt; 2) t_int = 2;\n    }\n\n    void setTrigger(float val) {\n        lv_trigger = val;\n    }\n\n    void setSqualch(float val) {\n        lv_squalch = val;\n    }\n\n    void draw() {\n        color boxBorder = color(0);\n        color boxCenterLine = color(127, 127, 127);\n        fill(boxBorder);\n        text(name_tag, posX, posY -10);\n        noFill();\n        stroke(boxBorder);\n        rect(posX, posY, boxW, boxH);\n        stroke(boxCenterLine);\n        line(posX, posY + boxH /2, posX +boxW, posY + boxH /2);\n        // Time Line\n        float t_total = cnt_data * t_int;\n        for(int i=0; i &lt;= 10; i++) {\n            line(   posX + (i * boxW / 10),  posY +boxH,\n                    posX + (i * boxW / 10), posY +boxH +10);\n            fill(boxCenterLine);\n            text(   nf(t_total - (i * t_total/10), 0, 0),\n                    posX + (i * boxW / 10) -5,  posY +boxH +24);\n            noFill();\n        }\n\n        for(int j=0; j &lt; cnt_data_set; j++) {\n            stroke(graphColor[j]);\n            for(int i=0; i &lt; cnt_data -1; i++) {\n                float x1 = posX +1 +i;\n                float x2 = posX +2 +i;\n                float y1 = posY +boxH -(g_height * (data[j][i]+1) / dataMax[j]);\n                float y2 = posY +boxH -(g_height * (data[j][i+1]+1) / dataMax[j]);\n                line(x1, y1, x2, y2);\n            }\n            fill(graphColor[j]);\n            text(   nf(data[j][cnt_data-1], 0, 3),\n                    posX +boxW +10,\n                    posY +boxH -1 -(g_height * (data[j][cnt_data-1]+1) / dataMax[j]));\n            noFill();\n        }\n        // Trigger &amp; Squalch\n        stroke(boxCenterLine);\n        line(posX, posY +(boxH * lv_trigger), posX +boxW, posY +(boxH * lv_trigger));\n        line(posX, posY +(boxH * lv_squalch), posX +boxW, posY +(boxH * lv_squalch));\n        fill(boxCenterLine);\n        text(\"THRE\", posX -32, posY +boxH -(boxH * lv_trigger) +4);\n        text(\"GATE\", posX -32, posY +boxH -(boxH * lv_squalch) +4);\n        noFill();\n        for(int i=0; i &lt; cnt_data_set; i++) {\n            stroke(graphColor[i]);\n            if(trigger[i] == true) {\n                fill(graphColor[i]);\n                rect(posX + 5 +(30 * i) + (5 * i), posY + 5, 30, 20);\n            }\n        }\n    }\n\n    void add(int no_set, float val) {\n        t_now = millis();\n        if((t_now - t_pre[no_set] &gt; t_int) &amp;&amp; chk_update) {\n            t_pre[no_set] = t_now;\n            for(int i=0; i &lt; cnt_data -1; i++) {\n                data[no_set][i] = data[no_set][i+1];\n            }\n            data[no_set][cnt_data -1] = val;\n            if(val / dataMax[no_set] &gt; lv_trigger) trigger[no_set] = true;\n            else trigger[no_set] = false;\n        }\n    }\n\n    Boolean isClick() {\n        if(     (mouseX &gt; posX &amp;&amp; mouseX &lt; posX + boxW)\n            &amp;&amp;  (mouseY &gt; posY &amp;&amp; mouseY &lt; posY + boxH)) return true;\n        else return false;\n    }\n\n    Boolean isPause() {\n        if(chk_update) return false;\n        else return true;\n    }\n\n    Boolean isUpdate() {\n        if(chk_update) return true;\n        else return false;\n    }\n\n    void setPause() {\n        chk_update = false;\n    }\n\n    void setUpdate() {\n        chk_update = true;\n    }\n\n    void toggle() {\n        if(chk_update) chk_update = false;\n        else chk_update = true;\n    }\n}\n</code></pre>"},{"location":"04_Arduino_Ext/Multitask_SerialRead/","title":"Multi Task &amp; Serial Read (\uc608\uc815)","text":"serialWrite.ino<pre><code>unsigned long t = 0;\n\nvoid setup() {\n    Serial.begin(115200);\n}\n\nvoid loop() {\n    while(Serial.available() &gt; 0) {\n        int val1 = Serial.parseInt();\n        if(Serial.read() == '\\n') {\n            // Do Something\n        }\n    }\n    // Multi Task, 100ms \ub9c8\ub2e4 \uccb4\ud06c\n    if(millis() -t &gt; 100) {\n        t = millis();\n        // Do Something\n    }\n}\n</code></pre>"},{"location":"04_Arduino_Ext/1_Motor/PCA9684_Processing/","title":"Circle Arrow with PCA9685","text":"<ul> <li>PCA9684\ub97c \uc774\uc6a9\ud574 \uc11c\ubcf4\ubaa8\ud130 2\uac1c\ub97c \uc5ec\ub7ec\uac1c \uc5f0\uacb0\ud558\uace0 \uc81c\uc5b4\ud55c\ub2e4.</li> <li>\uc2dc\ub9ac\uc5bc \ud3ec\ud2b8\ub85c \uac12\uc744 \uc785\ub825\ud558\uba74(\uc27c\ud45c\ub85c \uad6c\ubd84 2\uac1c \uac12)</li> </ul> pca9685_servo.ino<pre><code>//\n// PCA96885 Wiring\n// SCL -&gt; A4\n// SDA -&gt; A5\n//\n#include &lt;Adafruit_PWMServoDriver.h&gt;\n\n#define sv1 0\n#define sv2 1\n\n#define SERVOMIN  125\n#define SERVOMAX  625\n\nAdafruit_PWMServoDriver sv_brd = Adafruit_PWMServoDriver(0x40);\n\nvoid setup() {\n    Serial.begin(115200);\n    Serial.println(\"===== Serial Port Ready =====\");\n\n    sv_brd.begin();\n    sv_brd.setPWMFreq(60);\n}\n\nvoid loop() {\n    while(Serial.available() &gt; 0) {\n        int val1 = Serial.parseInt();\n        int val2 = Serial.parseInt();\n\n        if(Serial.read() == '\\n') {\n            sv_brd.setPWM(sv1, 0, servoPulse(val1));\n            sv_brd.setPWM(sv2, 0, servoPulse(val2));\n\n            Serial.print(val1);\n            Serial.print(\", \");\n            Serial.println(val2);\n        }\n    }\n}\n\nint servoPulse(int angle) {\n    int pulse = constrain(angle, 0, 180);\n    return map(pulse, 0, 180, SERVO_MIN, SERVO_MAX);\n}\n</code></pre>"},{"location":"04_Arduino_Ext/1_Motor/PCA9685/","title":"PCA9685 16ch Servo Motor","text":"<p>PCA9685\uc5d0 \uc5f0\uacb0\ub41c 16\uac1c\uc758 \uc11c\ubcf4\ub97c \ud558\ub098\uc529 \uc6c0\uc9c1\uc778\ub2e4.</p> pca9685.ino<pre><code>#include &lt;Adafruit_PWMServoDriver.h&gt;\nAdafruit_PWMServoDriver board1 = Adafruit_PWMServoDriver(0x40);\n\n#define SERVOMIN  125\n#define SERVOMAX  625\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println(\"Servo test!\");\n  board1.begin();\n  board1.setPWMFreq(60);\n}\n\nvoid loop() {\n  for(int i=0; i&lt;8; i++) {\n    board1.setPWM(i, 0, angleToPulse(0) );\n  }\n  delay(1000);\n\n  for( int angle =0; angle&lt;181; angle +=10) {\n    for(int i=0; i&lt;8; i++) {\n      board1.setPWM(i, 0, angleToPulse(angle) );\n    }\n  }\n  delay(100);\n}\n\nint angleToPulse(int ang) {\n  int pulse = map(ang,0, 180, SERVOMIN,SERVOMAX);\n  Serial.print(\"Angle: \");Serial.print(ang);\n  Serial.print(\" pulse: \");Serial.println(pulse);\n  return pulse;\n}\n</code></pre>"},{"location":"04_Arduino_Ext/2_Sensor/HC-SR04/","title":"HC-SR04 \ucd08\uc74c\ud30c\uc13c\uc11c","text":"<p>\ucd08\uc74c\ud30c \uc13c\uc11c\ub97c \uc0ac\uc6a9\ud574 \uac70\ub9ac\ub97c \uce21\uc815\ud55c\ub2e4.</p> ultrasonic.ino<pre><code>#define TRIG_PIN 9\n#define ECHO_PIN 8\n\nvoid setup() {\n    Serial.begin(115200);\n    pinMode(TRIG_PIN, OUTPUT);\n    pinMode(ECHO_PIN, INPUT);\n}\n\nvoid loop() {\n    digitalWrite(TRIG_PIN, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(TRIG_PIN, LOW);\n    long dist = pulseIn(ECHO_PIN, HIGH) / 58;\n\n    Serial.print(dist);\n    Serial.println(\" cm\");\n\n    delay(500);\n}\n</code></pre> <ul> <li>\ucd08\uc74c\ud30c\ub294 28us \ub9c8\ub2e4 1cm \uc774\ub3d9</li> <li>\ucd08\uc74c\ud30c\uac00 \uc655\ubcf5 \ud588\uc73c\ubbc0\ub85c 28 * 2 \ud574\uc11c 58, 58\uc774\uba74 2cm</li> <li>\uce21\uc815\ubc94\uc704 2cm ~ 4m</li> </ul>"},{"location":"04_Arduino_Ext/2_Sensor/HC-SR04/#pulsein","title":"pulseIn()","text":"<ul> <li><code>pulseIn(pin, valuse);</code> value\uac00 HIGH \uc774\uba74 \uc2dc\uc791 \ubd80\ud130 HIGH \ub420\ub54c \uae4c\uc9c0\uc758 \uc2dc\uac04, us \ub2e8\uc704</li> <li>\ub300\uae30\uc2dc\uac04\uc740 10us ~ 3min</li> <li>\ub300\uae30\uc2dc\uac04 \ubcc0\uacbd \uac00\ub2a5, us \ub2e8\uc704, \uae30\ubcf8\uac12\uc740 1\ucd08 (1,000,000 us)</li> <li><code>pulseIn(pin, valuse, timeout);</code> \ud615\uc2dd</li> <li>\ubc18\ud658\uac12 : <code>unsigned long</code></li> </ul>"},{"location":"04_Arduino_Ext/2_Sensor/PIR_Motion/","title":"PIR-Motion Sensor","text":"<p>\uc778\uccb4\uac10\uc9c0 \ubaa8\uc158\uc13c\uc11c(\uc801\uc678\uc120 \ubcc0\ud654 \uac10\uc9c0) \uc0ac\uc6a9\ud558\uae30</p> <p></p> <ul> <li>\ub3d9\uc791\uc804\uc555 : 5~20V</li> <li>\ucd9c\ub825\uc804\uc555 : 3.2V (HIGH), 0V (LOW)</li> <li>\uc13c\uc11c\uac01\ub3c4 : 100\ub3c4 \uc774\ud558</li> <li>\uac10\uc9c0\ubc94\uc704 : 7m \uc774\ud558</li> <li>\ub3d9\uc791\uc628\ub3c4 : -20 ~ 70\ub3c4</li> </ul>"},{"location":"04_Arduino_Ext/2_Sensor/PIR_Motion/#_1","title":"\ub3d9\uc791 \uac10\ub3c4 \uc138\ud305","text":"<ul> <li>Hold Time : \uc2dc\uac04\uc870\uc808 (0\uc634 : 2\ucd08 ~ 1\uba54\uac00\uc634 : 248\ucd08, \uc911\uac04 120\ucd08 \uc815\ub3c4)</li> <li>Hold Time : \uc67c\ucabd \ub05d 2\ucd08, \uc911\uac04 4\ubd8440\ucd08~50\ucd08, 1/4 \uc9c0\uc810 2\ubd8430\ucd08, \ucd5c\ub300 10\ubd84 \uc815\ub3c4</li> <li>Sensitivity : \uac10\ub3c4\uc870\uc808 (\uc2dc\uacc4\ubc29\ud5a5 : \ubbfc\uac10\ub3c4 \ub0ae\uc74c)</li> <li>Jumpper L : Non-Retriggering, \ubcc0\ud654\uac00 \uac10\uc9c0\ub418\uba74 \uc77c\uc815\uc2dc\uac04 HIGH \uc720\uc9c0</li> <li>Jumpper H : Retriggering, \ubcc0\ud654\uac00 \uac10\uc9c0\ub418\ub294 \ub3d9\uc548 HIGH \ucd9c\ub825</li> </ul>"},{"location":"04_Arduino_Ext/2_Sensor/PIR_Motion/#_2","title":"\uc544\ub450\uc774\ub178\uc5d0\uc11c \uc124\uc815","text":"<ul> <li>\uc785\ub825\ud540 \uc124\uc815 : <code>pinMode(PIN\ubc88\ud638, INPUT);</code></li> <li>\ub370\uc774\ud130 \uc77d\uae30 :  <code>digitalRead()</code>\ub85c \uc77d\ub294\ub2e4. (Active High)</li> <li>\ub370\uc774\ud130 \ud310\ub2e8 : \uc13c\uc11c \uc778\uc2dd\ub418\uba74 HIGH, \ud3c9\uc18c\uc5d0\ub294 LOW \ucd9c\ub825</li> </ul>"},{"location":"04_Arduino_Ext/2_Sensor/PIR_Motion/#_3","title":"\uc0d8\ud50c\ucf54\ub4dc","text":"sensor_sr501.ino<pre><code>#define SENSOR_PIN 7\n\nvoid setup() {\n    pinMode(SENSOR_PIN, INPUT);\n    Serial.begin(115200);\n}\n\nvoid loop() {\n    int chk = digitalRead(SENSOR_PIN);\n    if(chk == HIGH) {\n        Serial.println(\"DETECT\");\n    } else {\n        Serial.println(\"NOT DETECT\");\n    }\n    delay(200);\n}\n</code></pre>"},{"location":"05_Capture2025_Students/","title":"Capture \uc2dc\ubbac\ub808\uc774\uc158 \uc791\uc5c5\ud558\uae30","text":"<ul> <li> <p>\uae30\uc874 \ud30c\uc77c\ub85c \ub9f5\ud551 \ud558\uae30</p> <ul> <li>\uc791\uc5c5 \ud30c\uc77c \ub85c\ub529</li> <li>\uc2a4\ud06c\ub9b0 \uc120\ud0dd\ud574\uc11c NDI \uc124\uc815 \ubc14\uafb8\uae30</li> <li>\uc870\uba85 \ubc1d\uae30 \uc870\uc815</li> </ul> </li> <li> <p>3D \ubaa8\ub378\ub9c1 \ubd88\ub7ec\uc624\uae30</p> <ul> <li>\uc2a4\ucf00\uce58\uc5c5 \ubd88\ub7ec\uc624\uae30 Youtube</li> </ul> </li> <li>\uc804\uc2dc\uc7a5 \ub9cc\ub4e4\uae30</li> <li>\uc804\uc2dc\uc7a5\uc5d0 \uc2a4\ud06c\ub9b0 \ub9cc\ub4e4\uae30<ul> <li>\ube44\ub514\uc624 \uc5f0\uacb0\ud558\uae30 Youtube</li> </ul> </li> <li> <p>NDI \uc5f0\uacb0</p> </li> <li> <p>Capture Tutorial</p> <ul> <li>Capture Tutorial List Youtube</li> </ul> </li> </ul>"},{"location":"06_3D_ModeDesign/","title":"3D Model Design","text":"<ul> <li> <p>Motion Gen</p> <ul> <li>\uc6c0\uc9c1\uc784 \uc2dc\ubbac\ub808\uc774\uc158 https://motiongen.io/core </li> <li>\ub808\uace0\ube14\ub7ed https://snappyxo.io/ </li> </ul> </li> <li> <p>Fusion 360</p> </li> </ul>"},{"location":"08_ESP32/","title":"ESP32 Wroom Dev Kit","text":""},{"location":"08_ESP32/#esp32-pinout","title":"ESP32 Pinout","text":""},{"location":"08_ESP32/#esp32-gpio-pins","title":"ESP32 GPIO Pins","text":"<ul> <li>ESP32 Wroom Dev Kit \uc0ac\uc6a9\ud558\uae30</li> </ul>"},{"location":"09_Projects/","title":"Projects List","text":"<ul> <li>Project 0501 : \ucd08\uc74c\ud30c \uc13c\uc11c\ub97c \uc77d\uc5b4 \ud504\ub85c\uc138\uc2f1\uc73c\ub85c \ubcf4\ub0b4\uace0, \ud504\ub85c\uc138\uc2f1\uc5d0\uc11c OSC\ub85c Mad Mapper\ub85c \ubcf4\ub0b8\ub2e4.</li> <li>Project 0509 : \ube44\ub514\uc624 \ud50c\ub808\uc774\uc5b4</li> </ul>"},{"location":"09_Projects/MP3Player_DFmini/","title":"MP3 Player","text":""},{"location":"09_Projects/MP3Player_DFmini/01_Basic_Code/","title":"01. Basic Code","text":"<p>ESP32 &amp; DFPlayer \ucd08\uae30\ud654 \ubc0f \ub3d9\uc791\ud655\uc778 \ucf54\ub4dc</p> <ul> <li>\uc804\uc6d0\uc774 \ucf1c\uc9c0\uace0 \ucd08\uae30\ud654\ub418\uba74 \uccab\ubc88\uc9f8 \uace1(0001.mp3)\uc774 1\ubc88 PLAY \ub41c\ub2e4.</li> <li>DFPlayer Class\ub97c \uc0dd\uc131\ud558\uace0 \ucd08\uae30\ud654 \ud558\ub294 \ucf54\ub4dc</li> <li>ESP32\uc640 \uc5f0\uacb0(RX,TX) \ubc30\uc120 \uc8fc\uc758</li> <li>DFPlayer \ud1b5\uc2e0\uc18d\ub3c4\ub294 9600bps\ub85c \uace0\uc815</li> </ul> <p></p> prj_mp3player.ino<pre><code>/*\n *  ESP32 &amp; MP3 Player\n */\n#include \"Arduino.h\"\n#include \"DFRobotDFPlayerMini.h\"\n\n#define RX_PIN 16\n#define TX_PIN 17\n\nDFRobotDFPlayerMini dfPlayer;\n\nvolatile int chk_old = 0;\n\nvoid setup() {\n    Serial.begin(115200);\n    Serial2.begin(9600, SERIAL_8N1, RX_PIN, TX_PIN);\n\n    Serial.println(\"\\n\\nMP3 Program Start\");\n    if (!dfPlayer.begin(Serial2), false) {\n        Serial.println(\"Unable to begin, Recheck the connection or SD Card!\");\n        while(true);\n    }\n    Serial.println(\"\\rDFPlayer Mini online.\");\n    dfPlayer.setTimeOut(500);\n\n    // MP3 Player Control\n    dfPlayer.volume(24);  // Volume : 0~30\n    dfPlayer.play(1);\n}\n\nvoid loop() {\n    int chk = dfPlayer.readState();\n    if(chk_old != chk) {\n        Serial.print(\"CHK_CODE: \");\n        Serial.printf(\"%08X\", chk);\n        Serial.println();\n        chk_old = chk;\n    }\n}\n</code></pre>"},{"location":"09_Projects/MP3Player_DFmini/02_Cmd_List/","title":"02. Command List","text":"<ul> <li>DF Player Command List</li> </ul> <pre><code>---- \uad6c\ud604\ud560 \uba85\ub839\uc5b4 1 ----\ndfPlayer.volume(10);                //0-30\uc0ac\uc774\uc758 \uac12\uc744 \uc778\uc218\ub85c \uc785\ub825.\ndfPlayer.volumeUp();                //\ubcfc\ub968\uc744 1\ub2e8\uacc4\uc529 \ud0a4\uc6b8 \ub54c \uc0ac\uc6a9\ndfPlayer.volumeDown();              //\ubcfc\ub968\uc744 1\ub2e8\uacc4\uc529 \ub0b4\ub9b4 \ub54c \uc0ac\uc6a9\n\ndfPlayer.enableDAC();               //\uc74c\uc545\ud30c\uc77c\uc5d0\uc11c \ub514\ucf54\ub529 \uc0c1\ud0dc\ub85c \uc124\uc815 (UNMUTE)\ndfPlayer.disableDAC();              //\uc74c\uc545\ud30c\uc77c\uc744 \ub514\ucf54\ub529 \ud558\uc9c0 \uc54a\uc74c (MUTE)\n\ndfPlayer.pause();                   //\uc77c\uc2dc \uc815\uc9c0\ndfPlayer.start();                   //\ub2e4\uc2dc \uc7ac\uc0dd\ndfPlayer.next();                    //\ub2e4\uc74c \uace1 \uc7ac\uc0dd\ndfPlayer.previous();                //\uc774\uc804 \uace1 \uc7ac\uc0dd\n\ndfPlayer.play(1);                   //1\ubc88\uc9f8 \ub178\ub798 \uc7ac\uc0dd(SD\uce74\ub4dc\uc5d0 \ud30c\uc77c\uc774 \uc800\uc7a5\ub41c \uc21c\uc11c\ub300\ub85c \uc7ac\uc0dd\ub428)\ndfPlayer.loop(1);                   //\uccab\ubc88\uc9f8 \ub178\ub798 \ubc18\ubcf5\uc7ac\uc0dd\ndfPlayer.enableLoop();              //\ud604\uc7ac \uc7ac\uc0dd \uc911\uc778 \ud2b8\ub799\uc744 \ubc18\ubcf5 \uc7ac\uc0dd \ubaa8\ub4dc\ub85c \uc9c0\uc815\ndfPlayer.disableLoop();             //\ud604\uc7ac \ubc18\ubcf5 \uc7ac\uc0dd \ud2b8\ub799\uc744 \ubc18\ubcf5\uc7ac\uc0dd \ubaa8\ub4dc\uc5d0\uc11c \ud574\uc81c\n\ndfPlayer.randomAll();               //\ubaa8\ub4e0 \uc74c\uc545\ud30c\uc77c \ub79c\ub364 \uc7ac\uc0dd\n\n---- \uad6c\ud604\ud560 \uba85\ub839\uc5b4 2 ----\ndfPlayer.enableLoopAll();           //\uc804\uccb4 MP3\ud30c\uc77c \uc7ac\uc0dd(SD\uce74\ub4dc\uc5d0 \ud30c\uc77c\uc774 \uc800\uc7a5\ub41c \uc21c\uc11c\ub300\ub85c \ucb49 \uc7ac\uc0dd)\ndfPlayer.disableLoopAll();          //\uc804\uccb4 MP3\ud30c\uc77c \uc7ac\uc0dd \uc911\uc9c0\n\ndfPlayer.playFolder(15, 4);         //\uc9c0\uc815\ud55c \ud3f4\ub354\uc758 \ud2b8\ub799 \uc7ac(15\ubc88 \ud3f4\ub354\uc758 4\ubc88 \ud2b8\ub799\uc7ac\uc0dd)\ndfPlayer.loopFolder(5);             //\uc9c0\uc815\ud55c \ud3f4\ub354\uc5e5 \uc788\ub294 \ubaa8\ub4e0 \uc74c\uc545 \uc21c\ud68c\uc7ac\uc0dd\n\n//----Read imformation----\nSerial.println(dfPlayer.readState()); //mp3 \ubaa8\ub4c8 \uc0c1\ud0dc \uc77d\uc5b4\uc624\uae30\nSerial.println(dfPlayer.readVolume()); //\ud604\uc7ac \ubcfc\ub968\uac12 \uc77d\uc5b4\uc624\uae30\nSerial.println(dfPlayer.readEQ()); //EQ\uc138\ud305 \uc77d\uc5b4\uc624\uae30\nSerial.println(dfPlayer.readFileCounts()); //SD\uce74\ub4dc\ub0b4\uc758 \uc804\uccb4 \uc74c\uc545\ud30c\uc77c \uac1c\uc218 \uc5bb\uc5b4\uc624\uae30\nSerial.println(dfPlayer.readCurrentFileNumber()); //\ud604\uc7ac \uc7ac\uc0dd\uc911\uc778 \ud3f4\ub354\uc758 \ud30c\uc77c\ubc88\ud638 \uc5bb\uc5b4\uc624\uae30\nSerial.println(dfPlayer.readFileCountsInFolder(3)); //\ud2b9\uc815 \ud3f4\ub354\ub0b4\uc758 \ud30c\uc77c \uac1c\uc218 \uc5bb\uc5b4\uc624\uae30\n\n----\uc774\ud004\ub77c\uc774\uc988 \ubaa8\ub4dc \uc9c0\uc815\uc2dc \uc0ac\uc6a9 ----   \ndfPlayer.EQ(DFPLAYER_EQ_NORMAL);    // \uc77c\ubc18\ubaa8\ub4dc\ndfPlayer.EQ(DFPLAYER_EQ_POP);       // \ud31d\ubaa8\ub4dc\ndfPlayer.EQ(DFPLAYER_EQ_ROCK);      // \ub77d\ubaa8\ub4dc\ndfPlayer.EQ(DFPLAYER_EQ_JAZZ);      // \uc7ac\uc988\ubaa8\ub4dc\ndfPlayer.EQ(DFPLAYER_EQ_CLASSIC);   // \ud074\ub798\uc2dd \ubaa8\ub4dc\ndfPlayer.EQ(DFPLAYER_EQ_BASS);      // BASS\ubaa8\ub4dc\n\n---\ub514\ubc14\uc774\uc2a4 \ubaa8\ub4dc \uc9c0\uc815\uc2dc \uc0ac\uc6a9: \uae30\ubcf8 SD\uce74\ub4dc \ubaa8\ub4dc \uc9c0\uc815, \uc0ac\uc6a9\ud558\uc9c0 \uc54a\uc544\ub3c4 \ub428 ----\ndfPlayer.outputDevice(DFPLAYER_DEVICE_U_DISK);   \ndfPlayer.outputDevice(DFPLAYER_DEVICE_SD);       \ndfPlayer.outputDevice(DFPLAYER_DEVICE_AUX);      \ndfPlayer.outputDevice(DFPLAYER_DEVICE_SLEEP);\ndfPlayer.outputDevice(DFPLAYER_DEVICE_FLASH);\n\n----mp3 \ubaa8\ub4c8 \uc81c\uc5b4 \ubaa8\ub4dc----\ndfPlayer.sleep();                   //\uc2ac\ub9bd\ubaa8\ub4dc\ndfPlayer.reset();                   //\uc2ac\ub9bd\ubaa8\ub4dc\ub85c\ubd80\ud130 \ubcf5\uadc0\ndfPlayer.outputSetting(true, 15);   //\uc774 \ubaa8\ub4c8\uc5d0\uc11c\ub294 \uc801\uc6a9\ub418\uc9c0 \uc54a\uc74c\ndfPlayer.setTimeOut(500);           //\uc2dc\ub9ac\uc5bc \ud1b5\uc2e0\uc6a9 \ud0c0\uc784\uc544\uc6c3 \uc2dc\uac04 \uc9c0\uc815\n\n----Mp3 \uc7ac\uc0dd----\ndfPlayer.advertise(3);              // \uad11\uace0\ubaa8\ub4dc\ub97c \uc2e4\ud589 (/ADVERT/000x.mp3)\ndfPlayer.stopAdvertise();           //\uad11\uace0 \ubaa8\ub4dc \ud574\uc81c\n\ndfPlayer.playLargeFolder(2, 999);   //\ud3f4\ub354\ub0b4\uc5d0 mp3\ud30c\uc77c\uc774 \uc5ec\ub7ec\uac1c \uc5ec\uc11c 0001.mp3\ud615\uc2dd\uc73c\ub85c \uc800\uc7a5\ud588\uc744 \ub54c \uc0ac\uc6a9 \ndfPlayer.playMp3Folder(4);          //mp3\ud3f4\ub354\uc5d0 \uc800\uc7a5\ub41c \ud2b8\ub799\uc744 \uc7ac\uc0dd(SD:/MP3/0004.mp3 \uc7ac\uc0dd)\n</code></pre>"},{"location":"09_Projects/Project_0501/","title":"\ucd08\uc74c\ud30c \uc13c\uc11c Project","text":"<ol> <li>\uc544\ub450\uc774\ub178 1 : \ucd08\uc74c\ud30c \uc13c\uc11c \uc0ac\uc6a9\ud558\uc5ec \uac70\ub9ac \uce21\uc815 (\uc0ac\ub78c\uc774 \ub2e4\uac00\uc624\ub294\uc9c0 \uce21\uc815)</li> <li>\uc544\ub450\uc774\ub178 2 : \uac70\ub9ac \uce21\uc815 \uac12\uc744 \ud504\ub85c\uc138\uc2f1\uc73c\ub85c \ubcf4\ub0b4\uae30 (\uc2dc\ub9ac\uc5bc \ud1b5\uc2e0)</li> <li>\ud504\ub85c\uc138\uc2f1 1 : \uc2dc\ub9ac\uc5bc \ub370\uc774\ud130 \uc77d\uae30</li> <li>\ud504\ub85c\uc138\uc2f1 2 : \uc544\ub450\uc774\ub178 \ub370\uc774\ud130\ub97c OSC\ub85c \ubcf4\ub0b4\uae30</li> <li>\ub9e4\ub4dc\ub9e4\ud37c : \ud504\ub85c\uc138\uc2f1\uc5d0\uc11c \ubcf4\ub0b8 OSC\ub97c \uc77d\uc5b4 \ubc18\uc601\ud55c\ub2e4.</li> </ol>"},{"location":"09_Projects/Project_0501/01_Arduino_1/","title":"1. \uc544\ub450\uc774\ub178 \ud504\ub85c\uadf8\ub798\ubc0d 1","text":"<ul> <li>\ucd08\uc74c\ud30c \uc13c\uc11c\ub97c \uc77d\uace0 \uc2dc\ub9ac\uc5bc\ub85c \ucd9c\ub825\ud55c\ub2e4.</li> <li>\ucd08\uc74c\ud30c \uc13c\uc11c\uc5d0 \ub300\ud55c \ub0b4\uc6a9 \ubcf4\uae30</li> </ul> p51_arduino1.ino<pre><code>#define TRIG_PIN 9\n#define ECHO_PIN 8\n\nvoid setup() {\n    pinMode(TRIG_PIN, OUTPUT);\n    pinMode(ECHO_PIN, INPUT);\n}\n\nvoid loop() {\n    digitalWrite(TRIG_PIN, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(TRIG_PIN, LOW);\n    long dist = pulseIn(ECHO_PIN, HIGH) / 58;\n\n    print(dist);   // cm \ub2e8\uc704\n    delay(200);\n}\n</code></pre> <p>Project 0501</p>"},{"location":"09_Projects/Project_0501/01_Arduino_2/","title":"1. \uc544\ub450\uc774\ub178 \ud504\ub85c\uadf8\ub798\ubc0d 2","text":"<ul> <li>\ucd08\uc74c\ud30c \uc13c\uc11c\ub97c \uc77d\uace0 \uc2dc\ub9ac\uc5bc\ub85c \ucd9c\ub825\ud55c\ub2e4.</li> <li>\ucd08\uc74c\ud30c \uc13c\uc11c\uc5d0 \ub300\ud55c \ub0b4\uc6a9 \ubcf4\uae30</li> </ul> p51_arduino1.ino<pre><code>#define TRIG_PIN 9\n#define ECHO_PIN 8\n\nvoid setup() {\n    Serial.begin(115200);\n    pinMode(TRIG_PIN, OUTPUT);\n    pinMode(ECHO_PIN, INPUT);\n}\n\nvoid loop() {\n    digitalWrite(TRIG_PIN, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(TRIG_PIN, LOW);\n    long dist = pulseIn(ECHO_PIN, HIGH) / 58;\n\n    Serial.println(dist);   // cm \ub2e8\uc704\n    delay(200);\n}\n</code></pre> <p>Project 0501</p>"},{"location":"09_Projects/Project_0501/02_Processing/","title":"2. \ud504\ub85c\uc138\uc2f1 \ud504\ub85c\uadf8\ub798\ubc0d 1","text":"<ul> <li>\uc2dc\ub9ac\uc5bc \ud3ec\ud2b8\uc5d0\uc11c \ubb38\uc790\uc5f4(String)\uc744 \uc77d\ub294\ub2e4.</li> <li>\uc785\ub825\ub418\ub294 \ubb38\uc790\uc5f4\uc740 '\\n' \ubb38\uc790\ub85c \ub05d\ub09c\ub2e4.</li> <li>\ubb38\uc790\ud615\uc2dd\uc758 \ub370\uc774\ud130\ub97c \uc22b\uc790 \ub370\uc774\ud130\ub85c \uc218\uc815\ud558\uc5ec \uc800\uc7a5\ud55c\ub2e4.</li> </ul> p51_processing1.pde<pre><code>import processing.serial.*;\n\nSerial port;\n\nint sData = 0;\n\nvoid setup() {\n    size(255, 255);\n    port = new Serial(this, \"/dev/cu.usbmodem141011\", 115200);\n}\n\nvoid draw() {\n    background(255);\n    println(sData);\n}\n\nvoid serialEvent(Serial port) {\n    String str = port.readStringUntil('\\n');\n    if(str != null) {\n        String s = trim(str);\n        sData = int(s);\n    }\n}\n</code></pre> <p>Project 0501</p>"},{"location":"09_Projects/Project_0501/03_OSC_send/","title":"3. OSC Send","text":"<ul> <li>\uc2dc\ub9ac\uc5bc\ub85c \ubc1b\uc740 \uc22b\uc790 \ub370\uc774\ud130\ub97c OSC \ud615\uc2dd\uc73c\ub85c \ubcf4\ub0b8\ub2e4.</li> <li>\ubcf4\ub0bc \uacf3\uc758 IP \uc8fc\uc18c, \ud3ec\ud2b8 \ubc88\ud638\uac00 \ud544\uc694\ud558\ub2e4.</li> <li>\uc5ec\uae30\uc11c\ub294 \ud504\ub85c\uc138\uc2f1\uacfc \uac19\uc740 \ucef4\ud4e8\ud130\uc5d0 \uc788\ub294 Mad Mapper\ub97c \ub300\uc0c1\uc73c\ub85c \ud55c\ub2e4.</li> <li>\ud504\ub85c\uc138\uc2f1 \ud504\ub85c\uadf8\ub7a81\uc5d0 OSC \ubcf4\ub0b4\uae30 \uae30\ub2a5\uc744 \ucd94\uac00\ud588\ub2e4.</li> </ul> p51_processing2.pde<pre><code>import processing.serial.*;\nimport oscP5.*;\nimport netP5.*;\n\nSerial port;\nint sData = 0;\n\nOscP5 osc;\nNetAddress dest;\n\nint portNo = 9001;\nint portDest = 8010;\nString ipDest = \"localhost\";\nString oscAddr = \"/dist\";\n\nvoid setup() {\n    size(255, 255);\n    port = new Serial(this, \"/dev/cu.usbmodem141011\", 115200);\n    osc = new OscP5(this, portNo);\n    dest = new NetAddress(ipDest, portDest);\n}\n\nvoid draw() {\n    background(255);\n    println(sData);\n    oscDistSend();\n}\n\nvoid serialEvent(Serial port) {\n    String str = port.readStringUntil('\\n');\n    if(str != null) {\n        String s = trim(str);\n        sData = int(s);\n    }\n}\n\nvoid oscDistSend() {\n    OscMessage msg = new OscMessage(oscAddr);\n    msg.add((int) sData);\n    osc.send(msg, dest);\n}\n</code></pre> <p>Project 0501</p>"},{"location":"09_Projects/Project_0509/","title":"Video Player Project","text":"<ul> <li>\ud504\ub85c\uc138\uc2f1\uc73c\ub85c \ub3d9\uc601\uc0c1 \ud30c\uc77c\uc744 \uc7ac\uc0dd\ud55c\ub2e4.</li> <li>\uc778\uccb4 \uac10\uc9c0 \uc13c\uc11c\ub97c \uc0ac\uc6a9\ud574 \uc0ac\ub78c\uc774 \ub2e4\uac00\uc654\uc744 \ub54c \ub2e4\ub978 \ub3d9\uc601\uc0c1\uc744 \ud2bc\ub2e4.</li> </ul>"},{"location":"09_Projects/Project_0509/#_1","title":"\ub3d9\uc791\uc124\uba85","text":"<ol> <li>\uae30\ubcf8 \ub3d9\uc601\uc0c11\uc744 \ubc18\ubcf5 \uc7ac\uc0dd\ub41c\ub2e4.</li> <li>\uc0ac\ub78c\uc774 \ub2e4\uac00\uc624\uba74 \uc13c\uc11c\ub85c \uac10\uc9c0\ud558\uc5ec \ub3d9\uc601\uc0c12\ub97c \uc7ac\uc0dd\ud55c\ub2e4.</li> <li>\ub3d9\uc601\uc0c12\uac00 \ub05d\ub098\uac70\ub098, \uc0ac\ub78c\uc774 \uc0ac\ub77c\uc9c0\uba74 \uae30\ubcf8 \ub3d9\uc601\uc0c1\uc73c\ub85c \ub3cc\uc544\uac04\ub2e4.</li> <li>\uc544\ub450\uc774\ub178 \uc13c\uc11c\uac10\uc9c0 -&gt; \uc2dc\ub9ac\uc5bc\ud3ec\ud2b8\ub85c \ucd9c\ub825</li> <li>\uc2dc\ub9ac\uc5bc\ud3ec\ud2b8 \uc2e0\ud638 -&gt; \ud504\ub85c\uc138\uc2f1\uc5d0\uc11c \uc785\ub825</li> <li>\ud504\ub85c\uc138\uc2f1\uc5d0\uc11c \ub3d9\uc601\uc0c1 \ucc98\ub9ac</li> <li>\ud504\ub85c\uc138\uc2f1 \ub3d9\uc601\uc0c1\uc744 NDI Scan-Converter\uc5d0\uc11c \uac00\uc838\uac10</li> <li>Mad Mapper\uc5d0\uc11c NDI \uc601\uc0c1\uc744 Source\ub85c \uc0ac\uc6a9</li> <li>Mad Mapper\uc5d0\uc11c NDI \uc601\uc0c1\uc744 Mapping \ud558\uc5ec \ucd9c\ub825\ud55c\ub2e4.</li> </ol>"},{"location":"09_Projects/Project_0509/01_video/","title":"Code 1: Video Control","text":"<ul> <li>\ud504\ub85c\uc138\uc2f1\uc73c\ub85c \ub3d9\uc601\uc0c1 \uc7ac\uc0dd\ud558\uae30</li> </ul>"},{"location":"09_Projects/Project_0509/01_video/#_1","title":"\ub3d9\uc601\uc0c1 \uc7ac\uc0dd \uae30\ubcf8 \ud615\uc2dd","text":"<ul> <li>\ub3d9\uc601\uc0c1\uc774\uc9c0\ub9cc, '\uc5ec\ub7ec\uc7a5\uc758 \uc774\ubbf8\uc9c0' \uac1c\ub150\uc73c\ub85c \ucc98\ub9ac\ud55c\ub2e4.</li> <li>video \ub77c\uc774\ube0c\ub7ec\ub9ac \uc784\ud3ec\ud2b8\ud558\uae30 (line 1)</li> <li>Movie \ud074\ub77c\uc2a4 \ubcc0\uc218 \uc9c0\uc815 (line 3)</li> <li>\ud074\ub77c\uc2a4 \ubcc0\uc218 \ucd08\uae30\ud654 (line 7)</li> <li>\ub3d9\uc601\uc0c1 \ud30c\uc77c\uc740 \ud504\ub85c\uc138\uc2f1 \uc2a4\ucf00\uce58\uac00 \uc788\ub294 \ud3f4\ub354 \uc548\uc5d0 <code>data</code> \ud3f4\ub354\ub97c \ub9cc\ub4e4\uc5b4 \ub123\ub294\ub2e4.</li> <li>\ub3d9\uc601\uc0c1\uc744 \uc7ac\uc0dd\ud558\uba74 (line 8), <code>movieEvent</code> \uac00 \ubc1c\uc0dd\ud55c\ub2e4. (line 15)</li> <li><code>movieEvent</code> \uc774\ubca4\ud2b8 \ud578\ub4e4\ub7ec\ub294 \ub2e4\uc74c \ud504\ub808\uc784\uc744 \uc77d\ub294\ub2e4.</li> <li><code>draw()</code>\uc5d0\uc11c \uba54\ubaa8\ub9ac\uc5d0 \ub85c\ub4dc\ub41c \uc774\ubbf8\uc9c0\ub97c \ucd9c\ub825\ud55c\ub2e4. (line 12)</li> <li>\uc774\ubca4\ud2b8 \ubc1c\uc0dd\uacfc \uc774\ubbf8\uc9c0 \ucd9c\ub825\uc744 \ubc18\ubcf5\ud55c\ub2e4.</li> </ul> p59_video1.pde<pre><code>import processing.video.*;\n\nMovie video1;\n\nvoid setup() {\n    size(800, 500);\n    video1 = new Movie(this, \"6162.mov\");\n    video1.play();\n}\n\nvoid draw() {\n    image(video1, 0, 0);\n}\n\nvoid movieEvent(Movie m) {\n    m.read();\n}\n</code></pre>"},{"location":"09_Projects/Project_0509/01_video/#_2","title":"\ub3d9\uc601\uc0c1 \uc815\ubcf4 \ucd9c\ub825","text":"<ul> <li>\ub3d9\uc601\uc0c1 \uc9c4\ud589 \uc0c1\ud0dc\ub97c \ucd9c\ub825\ud55c\ub2e4. (\uc804\uccb4 \uc2dc\uac04\uacfc \uc9c4\ud589 \uc2dc\uac04 \ud45c\uc2dc)</li> <li>\uac00\ub85cx\uc138\ub85c \ube44\uc728\uc744 16:9\ub85c \ucd9c\ub825\ud558\uae30 \uc704\ud574 \ud654\uba74 \ud06c\uae30\ub97c \uc870\uc808\ud558\uace0, \uc774\ubbf8\uc9c0 \uc601\uc5ed\uc774 \uc544\ub2cc \uacf3\uc5d0 \ub3d9\uc601\uc0c1 \uc815\ubcf4\ub97c \ud45c\uc2dc\ud55c\ub2e4.</li> </ul> p59_video2.pde<pre><code>import processing.video.*;\n\nMovie video1;\n\nint scrW, scrH;\n\nvoid setup() {\n    size(800, 500);\n    scrW = width;\n    scrH = (int)(width * 9/16);\n    video1 = new Movie(this, \"6162.mov\");\n    video1.play();\n}\n\nvoid draw() {\n    background(0);\n    image(video1, 0, 0, scrW, scrH);\n    text(video1.time(),     20, scrH +16);\n    text(video1.duration(), 20, scrH +32);\n}\n\nvoid movieEvent(Movie m) {\n    m.read();\n}\n</code></pre>"},{"location":"09_Projects/Project_0509/01_video/#_3","title":"\ub3d9\uc601\uc0c1 \ubc18\ubcf5 \uc7ac\uc0dd","text":"<ul> <li>\ub3d9\uc601\uc0c1 \ub0a8\uc740 \uc2dc\uac04\uc774 0.1\ucd08 \ubbf8\ubbfc\uc77c \ub54c \ub2e4\uc2dc \ucc98\uc74c\ubd80\ud130 \uc7ac\uc0dd\ud55c\ub2e4.</li> <li>\ubc18\ubcf5 \ud69f\uc218\ub97c \ud654\uba74\uc5d0 \ud45c\uc2dc\ud55c\ub2e4.</li> </ul> p59_video3.pde<pre><code>import processing.video.*;\n\nMovie video1;\n\nint scrW, scrH;\nint cntLoop = 1;\n\nvoid setup() {\n    size(800, 500);\n    scrW = width;\n    scrH = (int)(width * 9/16);\n    video1 = new Movie(this, \"6162.mov\");\n    video1.play();\n}\n\nvoid draw() {\n    background(0);\n    image(video1, 0, 0, scrW, scrH);\n    float vt = video1.time(); \n    float vd = video1.duration();\n    if(vd - vt &lt; 0.1) {\n        video1.jump(0);\n        cntLoop++;\n    }\n    text(vt, 20, scrH +15);\n    text(vd, 20, scrH +30);\n    text(cntLoop, 20, scrH + 45);\n}\n\nvoid movieEvent(Movie m) {\n    m.read();\n}\n</code></pre>"},{"location":"09_Projects/Project_0509/01_video/#_4","title":"\ub3d9\uc601\uc0c1 \ub9c8\uc6b0\uc2a4\ub85c \ucee8\ud2b8\ub864 \ud558\uae30","text":"<ul> <li>\ub3d9\uc601\uc0c1 \ub0a8\uc740 \uc2dc\uac04\uc774 0.1\ucd08 \ubbf8\ubbfc\uc77c \ub54c \ub2e4\uc2dc \ucc98\uc74c\ubd80\ud130 \uc7ac\uc0dd\ud55c\ub2e4.</li> <li>\ubc18\ubcf5 \ud69f\uc218\ub97c \ud654\uba74\uc5d0 \ud45c\uc2dc\ud55c\ub2e4.</li> <li>\ud654\uba74 \uc67c\ucabd 15%\ub97c \ud074\ub9ad\ud558\uba74 5\ucd08 \uc804\uc73c\ub85c \uc774\ub3d9</li> <li>\ud654\uba74 \uc624\ub978\ucabd 15%\ub97c \ud074\ub9ad\ud558\uba74 5\ucd08 \uc55e\uc73c\ub85c \uc774\ub3d9</li> <li>\ud654\uba74 \uc911\uc559\uc744 \ud074\ub9ad\ud558\uba74 PAUSE, \ub2e4\uc2dc \ud074\ub9ad\ud558\uba74 RESUME</li> <li>\ud654\uba74 \uc544\ub798\ucabd \uad6c\uc5ed, \uc601\uc0c1\uc774 \uc544\ub2cc \uad6c\uc5ed\uc744 \ub204\ub974\uba74 STOP (\ud3ec\uc9c0\uc158 0\uc73c\ub85c \uc774\ub3d9\ud558\uc5ec Pause)</li> </ul> p59_video4.pde<pre><code>import processing.video.*;\n\nMovie video1;\n\nint scrW, scrH, scrRew, scrFF;\nint cntLoop = 1;\nBoolean chkPause = false; \n\nvoid setup() {\n    //fullScreen();\n    size(800, 500);\n    scrW = width;\n    scrH = (int)(width * 9/16);\n    scrRew = (int)(width * 15/100);\n    scrFF =  (int)(width * 85/100);\n    video1 = new Movie(this, \"6162.mov\");\n    video1.play();\n}\n\nvoid draw() {\n    background(0);\n    image(video1, 0, 0, scrW, scrH);\n    float vt = video1.time(); \n    float vd = video1.duration();\n    if(vd - vt &lt; 0.1) {\n        video1.jump(0);\n        cntLoop++;\n    }\n    text(vt, 20, scrH +15);\n    text(vd, 20, scrH +30);\n    text(cntLoop, 20, scrH + 45);\n}\n\nvoid movieEvent(Movie m) {\n    m.read();\n}\n\nvoid mousePressed() {\n    if(mouseX &lt; scrRew) {\n        // Rewind\n        float jt = video1.time() - 5.0;\n        if(jt &lt; 0) jt = 0;\n        video1.jump(jt);\n    } else if(mouseX &gt; scrFF) {\n        // Fast Forward\n        float jt = video1.time() + 5.0;\n        if(jt &gt; video1.duration()) jt = video1.duration();\n        video1.jump(jt);\n    } else {\n        // Pause &amp; Resume\n        if(chkPause) {\n            video1.play();\n            chkPause = false;\n        } else {\n            // Stop\n            if(mouseY &gt; scrH) {\n                video1.jump(0);\n            }\n            video1.pause();\n            chkPause = true;\n        }\n    }\n}\n</code></pre>"},{"location":"09_Projects/Project_0509/02_video2ch/","title":"Code 2: \ub3d9\uc601\uc0c1 \uc7ac\uc0dd","text":"<ul> <li>\ud504\ub85c\uc138\uc2f1\uc5d0\uc11c \ub3d9\uc601\uc0c1 \ud30c\uc77c \uc7ac\uc0dd\ud558\uae30</li> </ul>"},{"location":"09_Projects/Project_0509/02_video2ch/#2","title":"\ub3d9\uc601\uc0c1 2\uac1c, \ud074\ub9ad\ud558\uba74 \ub2e4\ub978 \uc601\uc0c1 \ub098\uc624\uae30","text":"<ul> <li>\ub3d9\uc601\uc0c1 2\uac1c \uc0ac\uc6a9</li> <li>\uae30\ubcf8 \uc601\uc0c1\uc740 \ubc18\ubcf5 \uc7ac\uc0dd\ub41c\ub2e4.</li> <li>\ud074\ub9ad\ud558\uba74 \ub2e4\ub978 \uc601\uc0c1\uc774 \ucc98\uc74c\ubd80\ud130 \uc7ac\uc0dd\ub41c\ub2e4.</li> <li>\ud074\ub9ad \uc601\uc0c1\uc744 \uae38\uac8c \ud2c0\uace0 \uc788\uc73c\uba74 \ubc18\ubcf5 \uc7ac\uc0dd, \ud074\ub9ad\ud560 \ub54c\ub9c8\ub2e4 \ucc98\uc74c\ubd80\ud130 \uc7ac\uc0dd</li> </ul> p59_videoPlayer2.pde<pre><code>import processing.video.*;\n\nMovie movNor, movTrg;\n\nint chk = 0;\n\nvoid setup() {\n    size(1280, 720);\n    movNor = new Movie(this, \"6044.mov\");\n    movTrg = new Movie(this, \"6162.mov\");\n    movNor.loop();\n    movTrg.loop();\n}\n\nvoid draw() {\n    if(chk == 1) {\n        image(movTrg, 0, 0);\n    } else {\n        image(movNor, 0, 0);\n    }\n}\n\nvoid movieEvent(Movie m) {\n    m.read();\n}\n\nvoid mousePressed() {\n    chk = 1;\n    movTrg.jump(0);\n}\n\nvoid mouseReleased() {\n    chk = 0;\n}\n</code></pre>"},{"location":"09_Projects/Project_0509/02_video2ch/#2_1","title":"\ub3d9\uc601\uc0c1 2\uac1c, \uc218\uc815 \ubc84\uc804","text":"<ul> <li>Loop \ubc18\ubcf5\ud558\ub2e4 \uba48\ucd94\ub294 \ud604\uc0c1\uc774 \uc788\uc5b4\uc11c Loop \ubc29\uc2dd\uc744 \uc218\uc815\ud568</li> <li>Video \ud06c\uae30\ub97c 16x9 \uc0ac\uc774\uc988\ub85c \uace0\uc815</li> <li>\uc601\uc0c1 \uac00\ub85c \ud06c\uae30\uc5d0 \ub9de\uac8c \uc790\ub3d9 \uc218\uc815</li> </ul> p59_videoPlayer3.pde<pre><code>import processing.video.*;\n\nMovie movNor, movTrg;\n\nfloat loopPos = 0.2;\nString movFile1 = \"6162.mov\";\nString movFile2 = \"5824.mov\";\n\nint scrW, scrH;\n\nint chk = 0;\n\nvoid setup() {\n    size(1280, 720);\n    scrW = width;\n    scrH = (int)(width *9/16);\n    movInit();\n    movNor.play();\n    movTrg.pause();\n}\n\nvoid draw() {\n    if(chk == 1) {\n        image(movTrg, 0, 0, scrW, scrH);\n    } else {\n        image(movNor, 0, 0, scrW, scrH);\n    }\n    if(movNor.duration() - movNor.time() &lt; loopPos) {\n        movNor.jump(0);\n    }\n}\n\nvoid movieEvent(Movie m) {\n    m.read();\n}\n\nvoid movInit() {\n    movNor = new Movie(this, movFile1);\n    movTrg = new Movie(this, movFile2);\n}\n\nvoid mousePressed() {\n    chk = 1;\n    movTrg.jump(0);\n    movTrg.play();\n}\n\nvoid mouseReleased() {\n    chk = 0;\n    movTrg.pause();\n    movTrg.jump(0);\n}\n</code></pre>"},{"location":"09_Projects/Project_0509/02_video2ch/#2_2","title":"\ub3d9\uc601\uc0c1 2\uac1c, \ub514\ubc84\uae45 \ubc84\uc804","text":"<ul> <li>\ud654\uba74\uc744 3\uac1c \uad6c\uc131\ud558\uc5ec \ub3d9\uc601\uc0c1 \ud655\uc778</li> <li>Loop \ud69f\uc218\ub97c \uce74\uc6b4\ud2b8\ud558\uace0, \ud654\uba74\uc5d0 \ud45c\uc2dc</li> </ul> p59_videoPlayer4.pde<pre><code>import processing.video.*;\n\nMovie movNor, movTrg;\n\nfloat loopPos = 0.2;\nString movFile1 = \"6162.mov\";\nString movFile2 = \"5824.mov\";\n\nint scrW, scrH, scrW2, scrH2;\n\nint chk = 0;\nint cnt = 1;\nint cnt2 = 0;\n\nvoid setup() {\n    size(1280, 720+360);\n    scrW = width;\n    scrH = (int)(width *9/16);\n    scrW2 = (int)(scrW /2);\n    scrH2 = (int)(scrH /2);\n    movInit();\n    movNor.play();\n    movTrg.pause();\n}\n\nvoid draw() {\n    if(chk == 1) {\n        image(movTrg, 0, 0, scrW, scrH);\n        image(movNor, 0, scrH, scrW2, scrH2);\n        image(movTrg, scrW2, scrH, scrW2, scrH2);\n    } else {\n        image(movNor, 0, 0, scrW, scrH);\n        image(movNor, 0, scrH, scrW2, scrH2);\n        image(movTrg, scrW2, scrH, scrW2, scrH2);\n    }\n    if(movNor.duration() - movNor.time() &lt; loopPos) {\n      movNor.jump(0);\n      cnt++;\n    }\n    text(cnt,  20, scrH +30);\n    text(cnt2, scrW2 +20, scrH +30);\n}\n\nvoid movieEvent(Movie m) {\n    m.read();\n}\n\nvoid movInit() {\n    movNor = new Movie(this, movFile1);\n    movTrg = new Movie(this, movFile2);\n}\n\nvoid mousePressed() {\n    chk = 1;\n    cnt2++;\n    movTrg.jump(0);\n    movTrg.play();\n}\n\nvoid mouseReleased() {\n    chk = 0;\n    movTrg.pause();\n    movTrg.jump(0);\n}\n</code></pre>"},{"location":"09_Projects/Project_0509/03_videoTrigger/","title":"Code 3: \uc2dc\ub9ac\uc5bc \ucee8\ud2b8\ub864","text":"<ul> <li>\uc2dc\ub9ac\uc5bc \ud3ec\ud2b8\ub85c \ub4e4\uc5b4\uc624\ub294 \ubb38\uc790\uc5f4\ub85c \ub3d9\uc601\uc0c1 \uc7ac\uc0dd</li> </ul>"},{"location":"09_Projects/Project_0509/03_videoTrigger/#_1","title":"\ud504\ub85c\uc138\uc2f1 \ucf54\ub4dc","text":"p59_videoTrigger.pde<pre><code>import processing.serial.*;\nimport processing.video.*;\n\nSerial port;\nMovie movNor, movTrg;\n\nfloat loopPos = 0.2;\nString movFile1 = \"6162.mov\";\nString movFile2 = \"5824.mov\";\nint scrW, scrH;\n\nint sensorChk = 0;\n\nvoid setup() {\n    size(1280, 720);\n    scrW = width;\n    scrH = (int)(width *9/16);\n    port = new Serial(this, \"/dev/cu.usbmodem141011\", 115200);\n    movNor = new Movie(this, movFile1);\n    movTrg = new Movie(this, movFile2);\n    movNor.play();\n    movTrg.pause();\n}\n\nvoid draw() {\n    if(sensorChk == 1) {\n        image(movTrg, 0, 0, scrW, scrH);\n    } else {\n        image(movNor, 0, 0, scrW, scrH);\n    }\n    if(movNor.duration() - movNor.time() &lt; loopPos) {\n        movNor.jump(0);\n    }\n}\n\nvoid movieEvent(Movie m) {\n    m.read();\n}\n\nvoid serialEvent(Serial port) {\n    String str = port.readStringUntil('\\n');\n    if(str != null) {\n        String s = trim(str);\n        if(s == \"DETECT\") {\n            sensorChk = 1;\n            movTrg.jump(0);\n            movTrg.play();\n        } else if(s == \"NOT DETECT\") {\n            sensorChk = 0;\n            movTrg.pause();\n            movTrg.jump(0);\n        }\n    }\n}\n</code></pre>"},{"location":"09_Projects/Project_0509/03_videoTrigger/#_2","title":"\uc544\ub450\uc774\ub178 \ucf54\ub4dc","text":"sensor_sr501.ino<pre><code>#define SENSOR_PIN 7\n\nvoid setup() {\n    pinMode(SENSOR_PIN, INPUT);\n    Serial.begin(115200);\n}\n\nvoid loop() {\n    int chk = digitalRead(SENSOR_PIN);\n    if(chk == HIGH) {\n        Serial.println(\"DETECT\");\n    } else {\n        Serial.println(\"NOT DETECT\");\n    }\n    delay(200);\n}\n</code></pre>"},{"location":"09_Projects/Project_0509/04_videoMapper/","title":"Video Mapper Routing","text":"<ol> <li>\ud504\ub85c\uc138\uc2f1\uc73c\ub85c \ub3d9\uc601\uc0c1 \ucd9c\ub825 \uc0c1\ud0dc\uac00 \ub428</li> <li>NDI Tools\uc758 Scan Converter \uc2e4\ud589</li> <li> <p>Scan Converter\uc758 Capture \uba54\ub274\uc5d0\uc11c \ud504\ub85c\uc138\uc2f1 \uc2e4\ud589 \uc708\ub3c4\uc6b0 \uc120\ud0dd     </p> </li> <li> <p>Mad Mapper\uc5d0\uc11c <code>Live Input</code> \ud56d\ubaa9\uc758 NDI\ub97c \uc120\ud0dd\ud558\uba74 \ub3d9\uc601\uc0c1\uc774 \ub098\ud0c0\ub09c\ub2e4.     </p> <ul> <li>MadMapper\uc5d0\uc11c \uc77c\ubc18\uc801\uc778 \uc601\uc0c1 \uc18c\uc2a4 \uc0ac\uc6a9\ud558\ub4ef NDI \uc601\uc0c1\uc744 \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4.</li> </ul> </li> <li>Mad Mapper\uc5d0\uc11c \ub9f5\ud551 \uc2e4\ud589</li> </ol>"},{"location":"09_Projects/Project_251-PSJ/","title":"\uac70\ub9ac\uc13c\uc11c\uc640 \uc11c\ubcf4\ubaa8\ud130","text":"<ul> <li>\uac70\ub9ac \uc13c\uc11c\uc640 \uc11c\ubcf4 \ubaa8\ud130\ub97c \uc0ac\uc6a9\ud55c \ud504\ub85c\uc81d\ud2b8</li> <li>\uc0ac\ub78c\uc774 \ub2e4\uac00 \uc624\uba74 \uc11c\ubcf4 \ubaa8\ud130\uac00 \ub3d9\uc791\ud55c\ub2e4.</li> <li>\uae30\ubcf8 \uc704\uce58\ub85c \ub300\uae30\ud558\ub2e4\uac00, \uc0ac\ub78c\uc774 \ub2e4\uac00\uc624\uba74 \uc9c0\uc815 \uc704\uce58\ub85c \uc6c0\uc9c1\uc778\ub2e4.</li> <li>\uc6c0\uc9c1\uc774\ub294 \ub3d9\uc548 \uac70\ub9ac \uc13c\uc11c \uac12\uc744 \uc77d\uc9c0 \uc54a\ub294\ub2e4.</li> <li>\ud55c \ub3d9\uc791\uc774 \ub05d\ub098\uace0 \ubcf5\uadc0\ud55c \ub2e4\uc74c \uc9c0\uc815 \uc2dc\uac04 \ub3d9\uc548 \uc6c0\uc9c1\uc774\uc9c0 \uc54a\ub294\ub2e4.</li> <li>HC-SR04 \ucd08\uc74c\ud30c \uc13c\uc11c \uc0ac\uc6a9\ud55c\ub2e4.</li> </ul> prj_251_psj.ino<pre><code>/*\n    \uc774\ub300 251 May \uc804\uc2dc\n    \ubc15\uc218\uc9c4 PROJECT\n    2025.05.26\n*/\n#include &lt;Servo.h&gt;\n\n#define TRIG_PIN 6\n#define ECHO_PIN 7\n#define SERV_PIN 9\n\nconst int tri = 60;\nconst int nor = 160;\nconst int time_tri = 1;\nconst int time_nor = 15;\nconst int time_hold = 2000;\nconst int time_ready = 2500;\nconst int tri_val = 80;       // \ub3d9\uc791\ud558\ub294 \uc704\uce58, \uc9c0\uc815\uac12 \ubcf4\ub2e4 \uac00\uae4c\uc6b0\uba74 \ub3d9\uc791\ud55c\ub2e4\n\nint chkAction = 0;\nint led_status = HIGH;\nlong led_timer = 0;\n\nServo sv;\n\nvoid setup() {\n    Serial.begin(115200);\n    pinMode(13, OUTPUT);\n    pinMode(TRIG_PIN, OUTPUT);\n    pinMode(ECHO_PIN, INPUT);\n    sv.attach(SERV_PIN);\n    servo2Nor();\n    delay(time_ready);\n}\n\nvoid loop() {\n    int val = readDist();\n    Serial.println(val);\n    if(val &lt; tri_val &amp;&amp; chkAction == 0) {\n        Serial.println(\"TRIGGER\");\n        chkAction = 1;\n        servo2Tri();\n        delay(time_hold);\n        Serial.println(\"Return\");\n        servo2Nor();\n        delay(time_ready);\n        chkAction = 0;\n    }\n    // LOOP - Ready Time LED BLINK\n    if(millis() - led_timer &gt; 500) {\n        led_timer = millis();\n        led_toggle();\n    }\n}\nint readDist() {\n    digitalWrite(TRIG_PIN, HIGH);\n    delayMicroseconds(10);\n    digitalWrite(TRIG_PIN, LOW);\n    long dist = pulseIn(ECHO_PIN, HIGH) / 58;\n    int getDist = 0;\n    getDist = dist;\n    delay(100);\n    return getDist;   \n}\n\nvoid led_toggle() {\n    if(led_status == HIGH) {\n        led_status = LOW;\n    } else {\n        led_status = HIGH;\n    }\n    digitalWrite(13, led_status);\n}\n\nvoid servo2Tri() {\n  for(int i=nor; i &gt;= tri; i--) {\n    sv.write(i);\n    delay(time_tri);\n  }\n}\n\nvoid servo2Nor() {\n  for(int i=tri; i &lt;= nor; i++) {\n    sv.write(i);\n    delay(time_nor);\n  }\n}\n</code></pre>"},{"location":"10_E252/1016_Arduino/","title":"1016. \uc544\ub450\uc774\ub178 \uc13c\uc11c \uc785\ub825","text":""},{"location":"10_E252/1016_Arduino/#code-1","title":"Code 1. \ub3d9\uc791\ud655\uc778","text":"led-blink.ino<pre><code>const int led = 13;\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n}\n\nvoid loop() {\n  digitalWrite(led, HIGH);\n  delay(500);\n\n  digitalWrite(led, LOW);\n  delay(500);\n}\n</code></pre>"},{"location":"10_E252/1016_Arduino/#code-2","title":"Code 2. \uc2dc\ub9ac\uc5bc \ud3ec\ud2b8 \uae00\uc790 \ucd9c\ub825","text":"led-serial1.ino<pre><code>const int led = 13;\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  Serial.println(\"LED ON\");\n  digitalWrite(led, HIGH);\n  delay(500);\n\n  Serial.println(\"LED OFF\");\n  digitalWrite(led, LOW);\n  delay(500);\n}\n</code></pre>"},{"location":"10_E252/1016_Arduino/#code-3","title":"Code 3. \ubcfc\ub968\uac12 \uc785\ub825 \ubc1b\uae30","text":"led-serial2.ino<pre><code>const int led = 13;\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  int val = analogRead(A0);\n  Serial.print(\"Volume : \");\n  Serial.println(val);\n\n  Serial.println(\"LED ON\");\n  digitalWrite(led, HIGH);\n  delay(500);\n\n  Serial.println(\"LED OFF\");\n  digitalWrite(led, LOW);\n  delay(500);\n}\n</code></pre>"},{"location":"10_E252/1016_Arduino/#code-4","title":"Code 4. \ubcfc\ub968\uac12 \uadf8\ub798\ud504\ub85c \ubcf4\uae30","text":"led-serial3.ino<pre><code>const int led = 13;\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  int val = analogRead(A0);\n  Serial.print(\"0, 1023, \");\n  Serial.println(val);\n\n  Serial.println(\"LED ON\");\n  digitalWrite(led, HIGH);\n  delay(500);\n\n  Serial.println(\"LED OFF\");\n  digitalWrite(led, LOW);\n  delay(500);\n}\n</code></pre>"},{"location":"10_E252/1016_Arduino/#code-5-led","title":"Code 5. \ubcfc\ub968\uac12\uc774 \ud2b9\uc815 \uad6c\uac04\uc5d0 \ub4e4\uc5b4\uc624\uba74 LED \ucf1c\uae30","text":"led-serial4.ino<pre><code>const int led = 13;\nconst int trigL = 500;\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  int val = analogRead(A0);\n  Serial.print(\"0, 1023, \");\n  Serial.println(val);\n\n  if(val &gt; trigL) {\n    digitalWrite(led, HIGH);\n    delay(10);\n  } else {\n    digitalWrite(led, LOW);\n    delay(10);\n  }\n}\n</code></pre>"},{"location":"10_E252/1016_Arduino/#code-6","title":"Code 6. \uc11c\ubcf4\ubaa8\ud130 \uc6c0\uc9c1\uc774\uae30","text":"servo.ino<pre><code>#include &lt;Servo.h&gt;\n#define SERVO_PIN 9\n\nServo sv;\n\nvoid setup() {\n  sv.attach(SERVO_PIN);\n}\n\nvoid loop() {\n  sv.write(0);\n  delay(1000);\n\n  sv.write(90);\n  delay(1000);\n\n  sv.write(180);\n  delay(1000);\n\n  sv.write(90);\n  delay(1000);\n}\n</code></pre>"},{"location":"10_E252/1016_Arduino/#code-7","title":"Code 7. \ubcfc\ub968\uc73c\ub85c \uc11c\ubcf4 \ubaa8\ud130 \uc6c0\uc9c1\uc774\uae30","text":"serial-servo1.ino<pre><code>#include &lt;Servo.h&gt;\n#define SERVO_PIN 9\n\nconst int led = 13;\n\nServo sv;\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n  Serial.begin(115200);\n  sv.attach(SERVO_PIN);\n}\n\nvoid loop() {\n  int val = analogRead(A0);\n  Serial.print(\"0, 1023, \");\n  Serial.println(val);\n  sv.write(val);\n  delay(10);\n}\n</code></pre>"},{"location":"10_E252/1016_Arduino/#code-8","title":"Code 8. \ubcfc\ub968\uc73c\ub85c \uc11c\ubcf4 \ubaa8\ud130 \uc6c0\uc9c1\uc774\uae30, \ubc94\uc704\uc81c\ud55c","text":"serial-servo2.ino<pre><code>#include &lt;Servo.h&gt;\n#define SERVO_PIN 9\n\nconst int led = 13;\n\nServo sv;\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n  Serial.begin(115200);\n  sv.attach(SERVO_PIN);\n}\n\nvoid loop() {\n  int val = analogRead(A0);\n  Serial.print(\"0, 1023, \");\n  Serial.println(val);\n  val = map(val, 0, 1023, 0, 180);\n  sv.write(val);\n  delay(10);\n}\n</code></pre>"},{"location":"99_Links/make_Horse/","title":"\ub9d0 \ub9cc\ub4e4\uae30","text":"<ul> <li>/shorts/pC7YOP1z-oQ Horse Simulation</li> <li>shorts/N9XeR3yDbRM Horse Automata</li> <li>LZkyNJ93M88 Neil Hendry Kinetic horse</li> <li>GH4N9sDNMss Automata horse 2.</li> <li>eTa0zdr1f8I Cowboy Automaton</li> <li>iMv8wTc2e3U Lo Fi Automata Equis</li> <li>AEglMduLljY Front Leg</li> <li>Ihf4oYr0YDA Automata Equis Actual</li> <li>38DgnJAg6ac The Golden Mechanical Horse by Adrian Landon</li> <li>5nkDzWr-Utg Running Horse Automata</li> <li>DfznnKUwywQ Computational Design of Mechanical Characters</li> <li>YIr00xJEqHM Galloping Horse Mechanism - Autodesk Inventor Animation</li> <li>l1-U5Rgf_SE Mechanical Horse 16:9</li> <li>XM8bbjPWgv0 AUTOMATA\u3000HORSE\u3000RUN</li> <li>nsDxchPtY4I Horse automaton</li> <li>5W7SDjmTiQk Running Horse Mechanism Motion Study SolidWorks</li> <li>0SSveGAOsdU Mechanisches Pferd - kinetic horse / Werner Gergaut</li> <li>er4RDTqzhk running horse mechanism</li> <li>VnO_5-aXFEA A horse in motion - a wooden horse \uc544\ub9c8\uc874 \ud310\ub9e4</li> </ul>"},{"location":"99_Links/make_wings/","title":"\ub0a0\uac1c \ub9cc\ub4e4\uae30","text":"<ul> <li>Keyword : ornithopter</li> <li>https://www.youtube.com/watch?v=Hat5Sr9If0o</li> <li>https://www.youtube.com/watch?v=N9b45bRSlG8</li> <li>https://www.youtube.com/watch?v=D5aeOL61tbo</li> <li>https://www.youtube.com/watch?v=Joht8NTiuSE</li> <li>https://www.youtube.com/watch?v=hvgRVQlfi-E</li> <li>https://www.youtube.com/watch?v=PmEdJMgmcJ0</li> <li>https://www.youtube.com/watch?v=LJ3WoeQeks4</li> <li>https://www.youtube.com/watch?v=nFp8HaLFgGs</li> <li>https://www.youtube.com/watch?v=YCuMKYi2HDs</li> <li>https://www.youtube.com/watch?v=tx2PG3CI8WQ</li> <li>https://www.youtube.com/watch?v=NFSd1vYkp88</li> <li>https://www.youtube.com/watch?v=HB9CcqWh4O0</li> <li>https://www.youtube.com/watch?v=Mdb5RVfQc-8</li> <li>https://www.youtube.com/watch?v=dLRaNebQ1Dc</li> <li>https://www.youtube.com/watch?v=NLgfujquSJs</li> <li>https://www.youtube.com/watch?v=y0DTpyV5MHc</li> <li>https://www.youtube.com/watch?v=IpjT_f-YBBo</li> <li>https://www.youtube.com/watch?v=XdktkSm0PZY</li> <li>https://www.youtube.com/watch?v=1kztP_XTEPk</li> <li>https://www.youtube.com/watch?v=nFp8HaLFgGs</li> </ul>"}]}